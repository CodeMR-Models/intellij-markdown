/* The following code was generated by JFlex 1.4.3 on 8/17/15 7:54 PM */

package org.intellij.markdown.lexer;

import org.intellij.markdown.IElementType;
import org.intellij.markdown.MarkdownTokenTypes;

import java.util.HashSet;
import java.util.Set;
import java.util.Stack;

/* Auto generated File */

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 8/17/15 7:54 PM from the specification file
 * <tt>/Users/valich/work/intellij-markdown/src/org/intellij/markdown/lexer/markdown.flex</tt>
 */
public class _MarkdownLexer {
  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int CODE = 10;
  public static final int AFTER_LINE_START = 6;
  public static final int TAG_START = 4;
  public static final int HTML_BLOCK = 2;
  public static final int YYINITIAL = 0;
  public static final int PARSE_DELIMITED = 8;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  2, 2
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\4\1\0\1\3\1\5\22\0\1\3\1\17\1\6"+
    "\1\12\2\45\1\11\1\10\1\47\1\47\1\46\1\45\1\44\1\20"+
    "\1\43\1\40\12\1\1\34\1\15\1\16\1\37\1\21\1\22\1\42"+
    "\1\31\1\25\1\27\1\30\2\25\15\23\1\32\3\23\1\24\2\23"+
    "\1\26\1\7\1\33\1\41\1\35\1\36\6\14\21\2\1\13\2\2"+
    "\1\45\1\41\2\45\uff81\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\5\0\3\1\1\2\3\3\2\4\1\5\1\6\1\7"+
    "\2\4\1\7\1\10\1\11\1\12\1\13\4\14\2\0"+
    "\2\15\1\3\2\15\2\0\1\16\1\17\10\0\1\16"+
    "\1\20\5\0\1\21\31\0\1\22\2\0\1\23\3\0"+
    "\1\21\5\0\1\22\26\0\1\22\24\0\1\21\2\0"+
    "\1\21\76\0\1\21\u0172\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[574];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\50\0\120\0\170\0\240\0\310\0\360\0\u0118"+
    "\0\310\0\u0140\0\u0168\0\u0190\0\310\0\u01b8\0\u01e0\0\u0208"+
    "\0\310\0\u0230\0\u0258\0\u0280\0\310\0\310\0\310\0\u02a8"+
    "\0\310\0\u02d0\0\u0230\0\u0280\0\360\0\u0168\0\310\0\u02f8"+
    "\0\u0320\0\u0168\0\u0348\0\u01b8\0\u0370\0\310\0\u0398\0\u03c0"+
    "\0\u03e8\0\u0410\0\u0438\0\u0460\0\u0488\0\u04b0\0\u02d0\0\u0370"+
    "\0\310\0\u04d8\0\u0500\0\u0528\0\u0550\0\u0578\0\310\0\u05a0"+
    "\0\u05c8\0\u05f0\0\u0618\0\u0640\0\u0668\0\u0690\0\u06b8\0\u06e0"+
    "\0\u0708\0\u0730\0\u0758\0\u0780\0\u07a8\0\u07d0\0\u07f8\0\u0820"+
    "\0\u0848\0\u0870\0\u0898\0\u08c0\0\u08e8\0\u0910\0\u0938\0\u0960"+
    "\0\310\0\u0988\0\u09b0\0\310\0\u09d8\0\u0a00\0\u0a28\0\u09d8"+
    "\0\u0a50\0\u0a78\0\u0aa0\0\u0ac8\0\u0af0\0\u0668\0\u0b18\0\u0b40"+
    "\0\u0b68\0\u0b90\0\u0bb8\0\u0be0\0\u0c08\0\u0c30\0\u0c58\0\u0c80"+
    "\0\u0ca8\0\u0cd0\0\u0cf8\0\u0d20\0\u0d48\0\u0d70\0\u0d98\0\u0dc0"+
    "\0\u0de8\0\u0e10\0\u0e38\0\u0e60\0\u09d8\0\u0e88\0\u0eb0\0\u0ed8"+
    "\0\u0f00\0\u0f28\0\u0f50\0\u0f78\0\u0fa0\0\u0fc8\0\u0ff0\0\u1018"+
    "\0\u1040\0\u1068\0\u1090\0\u10b8\0\u10e0\0\u1108\0\u1130\0\u1158"+
    "\0\u1180\0\u0be0\0\u11a8\0\u11d0\0\u0c08\0\u11f8\0\u1220\0\u1248"+
    "\0\u1270\0\u1298\0\u12c0\0\u12e8\0\u1310\0\u1338\0\u1360\0\u1388"+
    "\0\u13b0\0\u13d8\0\u1400\0\u1428\0\u1450\0\u1478\0\u14a0\0\u14c8"+
    "\0\u14f0\0\u1518\0\u1540\0\u1568\0\u1590\0\u15b8\0\u15e0\0\u1608"+
    "\0\u1630\0\u1658\0\u1680\0\u16a8\0\u16d0\0\u16f8\0\u1720\0\u1748"+
    "\0\u1770\0\u1798\0\u17c0\0\u17e8\0\u1810\0\u1838\0\u1860\0\u1888"+
    "\0\u18b0\0\u18d8\0\u1900\0\u1928\0\u1950\0\u1978\0\u19a0\0\u19c8"+
    "\0\u19f0\0\u1a18\0\u1a40\0\u1a68\0\u1a90\0\u1ab8\0\u1ae0\0\u1b08"+
    "\0\u1b30\0\u1b58\0\u1b80\0\u1770\0\u1ba8\0\u1bd0\0\u1bf8\0\u1c20"+
    "\0\u1c48\0\u1c70\0\u1c98\0\u1cc0\0\u1ce8\0\u1d10\0\u1d38\0\u1d60"+
    "\0\u1d88\0\u1db0\0\u1dd8\0\u1e00\0\u1e28\0\u1e50\0\u1e78\0\u1ea0"+
    "\0\u1ec8\0\u1ef0\0\u1f18\0\u1f40\0\u1f68\0\u1f90\0\u1fb8\0\u1fe0"+
    "\0\u2008\0\u2030\0\u2058\0\u2080\0\u20a8\0\u20d0\0\u20f8\0\u2120"+
    "\0\u2148\0\u2170\0\u2198\0\u21c0\0\u21e8\0\u2210\0\u2238\0\u2260"+
    "\0\u2288\0\u22b0\0\u22d8\0\u2300\0\u2328\0\u2350\0\u2378\0\u23a0"+
    "\0\u23c8\0\u23f0\0\u2418\0\u2440\0\u2468\0\u2490\0\u24b8\0\u24e0"+
    "\0\u2508\0\u2530\0\u2558\0\u2580\0\u25a8\0\u25d0\0\u25f8\0\u2620"+
    "\0\u2648\0\u2670\0\u2698\0\u26c0\0\u26e8\0\u2710\0\u2738\0\u2760"+
    "\0\u2788\0\u27b0\0\u27d8\0\u2800\0\u2828\0\u2850\0\u2878\0\u28a0"+
    "\0\u28c8\0\u28f0\0\u2918\0\u2940\0\u2968\0\u2990\0\u29b8\0\u29e0"+
    "\0\u2a08\0\u2a30\0\u2a58\0\u2a80\0\u2aa8\0\u2ad0\0\u2af8\0\u2b20"+
    "\0\u2b48\0\u2b70\0\u2b98\0\u2bc0\0\u2be8\0\u2c10\0\u2c38\0\u2c60"+
    "\0\u2c88\0\u2cb0\0\u2cd8\0\u2d00\0\u2d28\0\u2d50\0\u2d78\0\u2da0"+
    "\0\u2dc8\0\u2df0\0\u2e18\0\u2e40\0\u2e68\0\u2e90\0\u2eb8\0\u2ee0"+
    "\0\u2f08\0\u2f30\0\u2f58\0\u2f80\0\u2fa8\0\u2fd0\0\u2ff8\0\u3020"+
    "\0\u3048\0\u3070\0\u3098\0\u30c0\0\u30e8\0\u3110\0\u3138\0\u3160"+
    "\0\u3188\0\u31b0\0\u31d8\0\u3200\0\u3228\0\u3250\0\u3278\0\u32a0"+
    "\0\u32c8\0\u32f0\0\u3318\0\u3340\0\u3368\0\u3390\0\u33b8\0\u33e0"+
    "\0\u3408\0\u3430\0\u3458\0\u3480\0\u34a8\0\u34d0\0\u34f8\0\u3520"+
    "\0\u3548\0\u3570\0\u3598\0\u35c0\0\u35e8\0\u3610\0\u3638\0\u3660"+
    "\0\u3688\0\u36b0\0\u36d8\0\u3700\0\u3728\0\u3750\0\u3778\0\u37a0"+
    "\0\u37c8\0\u37f0\0\u3818\0\u3840\0\u3868\0\u3890\0\u38b8\0\u38e0"+
    "\0\u3908\0\u3930\0\u3958\0\u3980\0\u39a8\0\u39d0\0\u39f8\0\u3a20"+
    "\0\u3a48\0\u3a70\0\u3a98\0\u3ac0\0\u3ae8\0\u3b10\0\u3b38\0\u3b60"+
    "\0\u3b88\0\u3bb0\0\u3bd8\0\u3c00\0\u3c28\0\u3c50\0\u3c78\0\u3ca0"+
    "\0\u3cc8\0\u3cf0\0\u3d18\0\u3d40\0\u3d68\0\u3d90\0\u3db8\0\u3de0"+
    "\0\u3e08\0\u3e30\0\u3e58\0\u3e80\0\u3ea8\0\u3ed0\0\u3ef8\0\u3f20"+
    "\0\u3f48\0\u3f70\0\u3f98\0\u3fc0\0\u3fe8\0\u4010\0\u4038\0\u4060"+
    "\0\u4088\0\u40b0\0\u40d8\0\u4100\0\u4128\0\u4150\0\u4178\0\u41a0"+
    "\0\u41c8\0\u41f0\0\u4218\0\u4240\0\u4268\0\u4290\0\u42b8\0\u42e0"+
    "\0\u4308\0\u4330\0\u4358\0\u4380\0\u43a8\0\u43d0\0\u43f8\0\u4420"+
    "\0\u4448\0\u4470\0\u4498\0\u44c0\0\u44e8\0\u4510\0\u4538\0\u4560"+
    "\0\u4588\0\u45b0\0\u45d8\0\u4600\0\u4628\0\u4650\0\u4678\0\u46a0"+
    "\0\u46c8\0\u46f0\0\u4718\0\u4740\0\u4768\0\u4790\0\u47b8\0\u47e0"+
    "\0\u4808\0\u4830\0\u4858\0\u4880\0\u48a8\0\u48d0\0\u48f8\0\u4920"+
    "\0\u4948\0\u4970\0\u4998\0\u49c0\0\u49e8\0\u4a10\0\u4a38\0\u4a60"+
    "\0\u4a88\0\u4ab0\0\u4ad8\0\u4b00\0\u4b28\0\u4b50\0\u4b78\0\u4ba0"+
    "\0\u4bc8\0\u4bf0\0\u4c18\0\u4c40\0\u4c68\0\u4c90\0\u4cb8\0\u4ce0"+
    "\0\u4d08\0\u4d30\0\u4d58\0\u4d80\0\u4da8\0\u4dd0\0\u4df8\0\u4e20"+
    "\0\u4e48\0\u4e70\0\u4e98\0\u4ec0\0\u4ee8\0\u4f10\0\u4f38\0\u4f60"+
    "\0\u4f88\0\u4fb0\0\u4fd8\0\u5000\0\u5028\0\u5050\0\u5078\0\u50a0"+
    "\0\u50c8\0\u50f0\0\u5118\0\u5140\0\u5168\0\u5190\0\u51b8\0\u51e0"+
    "\0\u5208\0\u5230\0\u5258\0\u5280\0\u52a8\0\u52d0\0\u52f8\0\u5320"+
    "\0\u5348\0\u5370\0\u5398\0\u53c0\0\u53e8\0\u5410\0\u5438\0\u5460"+
    "\0\u5488\0\u54b0\0\u54d8\0\u5500\0\u5528\0\u5550";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[574];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\3\6\1\7\1\6\1\10\13\6\1\11\26\6\4\12"+
    "\1\13\1\14\42\12\4\15\1\0\44\15\2\16\1\17"+
    "\2\20\1\21\1\22\1\21\1\23\1\15\2\16\1\15"+
    "\1\24\1\25\1\15\1\21\1\15\3\16\1\21\4\16"+
    "\1\21\1\26\1\27\1\30\7\15\1\27\1\21\3\31"+
    "\1\32\1\6\1\10\1\31\1\33\6\31\1\34\16\31"+
    "\1\27\1\30\7\31\1\27\1\31\53\0\1\35\1\6"+
    "\1\10\46\0\1\6\43\0\4\12\1\0\43\12\3\0"+
    "\1\36\1\37\1\40\42\0\3\12\1\41\1\42\1\43"+
    "\42\12\1\0\2\16\1\44\7\0\2\16\6\0\3\16"+
    "\1\0\4\16\20\0\1\17\2\20\27\0\1\45\10\0"+
    "\1\45\4\0\3\20\50\0\5\46\3\0\4\46\4\0"+
    "\1\46\4\0\3\46\1\47\1\0\1\46\1\0\6\46"+
    "\1\0\2\50\7\0\1\51\2\50\6\0\3\50\1\0"+
    "\4\50\16\0\1\52\1\53\5\0\3\52\2\53\2\0"+
    "\1\54\1\52\1\0\1\55\3\53\1\0\4\53\2\0"+
    "\3\52\1\56\1\52\1\0\1\52\1\0\2\52\37\0"+
    "\1\30\14\0\1\57\31\0\1\45\10\0\1\45\5\0"+
    "\1\37\43\0\3\12\1\41\1\37\1\43\46\12\1\37"+
    "\43\12\3\0\1\60\102\0\1\47\12\0\2\50\10\0"+
    "\2\50\1\61\5\0\3\50\1\0\4\50\16\0\1\62"+
    "\11\0\1\63\10\0\1\63\24\0\2\52\5\0\5\52"+
    "\2\0\2\52\1\0\4\52\1\0\4\52\2\0\5\52"+
    "\1\64\1\52\1\0\2\52\2\0\1\65\1\53\1\66"+
    "\4\0\3\52\2\53\2\0\2\52\1\67\1\52\3\53"+
    "\1\0\4\53\1\0\1\70\3\52\1\71\1\52\1\64"+
    "\1\52\1\0\2\52\2\0\2\52\5\0\5\52\2\0"+
    "\1\52\1\72\1\0\1\52\3\73\1\74\4\73\2\0"+
    "\5\52\1\64\1\52\1\0\2\52\1\0\1\75\2\55"+
    "\5\75\5\55\2\75\2\55\1\75\1\76\3\55\1\75"+
    "\4\55\2\75\5\55\1\77\1\55\1\75\2\55\1\75"+
    "\1\0\1\52\1\100\5\0\3\52\2\100\2\0\2\52"+
    "\1\0\1\52\3\100\1\0\4\100\2\0\5\52\1\64"+
    "\1\52\1\0\2\52\2\0\1\101\13\0\1\61\33\0"+
    "\1\102\12\0\1\102\10\0\1\102\1\0\3\102\17\0"+
    "\2\103\10\0\2\103\6\0\3\103\1\0\4\103\16\0"+
    "\2\65\1\66\4\0\3\52\2\65\2\0\2\52\1\67"+
    "\1\52\3\65\1\0\4\65\2\0\3\52\1\71\1\52"+
    "\1\64\1\52\1\0\2\52\3\0\1\104\1\66\7\0"+
    "\2\104\3\0\1\104\1\67\1\0\3\104\1\0\4\104"+
    "\1\0\1\104\3\0\1\105\7\0\3\106\2\0\11\106"+
    "\1\0\2\106\1\0\26\106\1\0\2\52\5\0\5\52"+
    "\2\0\2\52\1\67\4\52\1\0\4\52\2\0\5\52"+
    "\1\64\1\52\1\0\2\52\2\0\2\52\5\0\5\52"+
    "\2\0\1\52\1\107\1\0\4\52\1\0\4\52\2\0"+
    "\5\52\1\64\1\52\1\0\2\52\2\0\2\52\1\110"+
    "\4\0\5\52\2\0\2\52\1\0\1\52\3\73\1\0"+
    "\4\73\2\0\5\52\1\64\1\52\1\0\2\52\30\0"+
    "\1\111\20\0\22\75\1\112\26\75\2\55\5\75\5\55"+
    "\2\75\2\55\1\67\4\55\1\75\4\55\2\75\5\55"+
    "\1\77\1\55\1\75\2\55\2\75\2\113\10\75\2\113"+
    "\5\75\1\112\3\113\1\75\4\113\15\75\1\0\2\100"+
    "\1\114\4\0\3\52\2\100\2\0\2\52\1\67\1\52"+
    "\3\100\1\0\4\100\2\0\5\52\1\64\1\52\1\0"+
    "\2\52\2\0\1\115\13\0\1\61\33\0\1\116\12\0"+
    "\1\116\1\61\7\0\1\116\1\0\3\116\17\0\2\117"+
    "\10\0\2\117\3\0\1\120\1\121\1\0\3\117\1\0"+
    "\4\117\10\0\1\64\5\0\2\104\1\122\7\0\2\104"+
    "\3\0\1\104\1\67\1\0\3\104\1\0\4\104\1\0"+
    "\2\104\1\0\1\123\1\105\2\0\1\104\25\0\1\67"+
    "\26\0\3\106\2\0\11\106\1\0\2\106\1\124\26\106"+
    "\1\125\2\126\5\125\5\126\2\125\1\126\1\127\1\130"+
    "\4\126\1\125\4\126\2\125\5\126\1\131\1\126\1\125"+
    "\2\126\1\125\3\105\1\132\15\105\1\0\26\105\30\0"+
    "\1\133\17\0\21\75\1\67\27\75\2\134\10\75\2\134"+
    "\3\75\1\135\1\136\1\112\3\134\1\75\4\134\10\75"+
    "\1\77\4\75\3\0\1\114\15\0\1\67\27\0\1\137"+
    "\13\0\1\61\33\0\1\140\12\0\1\140\1\61\7\0"+
    "\1\140\1\0\3\140\17\0\2\141\10\0\2\141\3\0"+
    "\1\142\1\121\1\0\3\141\1\0\4\141\10\0\1\64"+
    "\5\0\2\141\10\0\2\141\3\0\1\142\2\0\3\141"+
    "\1\0\4\141\17\0\1\104\1\122\7\0\2\104\3\0"+
    "\1\104\1\67\1\0\3\104\1\0\4\104\1\0\1\104"+
    "\2\0\1\123\1\105\7\0\3\143\1\123\2\0\1\144"+
    "\1\143\1\145\5\143\1\0\2\143\1\0\14\143\2\0"+
    "\10\143\20\125\1\146\30\125\2\126\5\125\5\126\2\125"+
    "\1\126\1\147\1\125\4\126\1\125\4\126\2\125\5\126"+
    "\1\131\1\126\1\125\2\126\2\125\2\126\5\125\5\126"+
    "\2\125\1\126\1\71\1\130\4\126\1\125\4\126\2\125"+
    "\5\126\1\131\1\126\1\125\2\126\2\125\2\150\10\125"+
    "\2\150\3\125\1\146\2\125\3\150\1\125\4\150\15\125"+
    "\3\105\1\132\15\105\1\67\26\105\31\0\1\151\16\0"+
    "\1\75\2\152\10\75\2\152\3\75\1\153\1\136\1\112"+
    "\3\152\1\75\4\152\10\75\1\77\5\75\2\152\10\75"+
    "\2\152\3\75\1\153\1\75\1\112\3\152\1\75\4\152"+
    "\15\75\1\0\1\154\13\0\1\61\33\0\1\155\12\0"+
    "\1\155\1\61\7\0\1\155\1\0\3\155\17\0\2\156"+
    "\10\0\2\156\3\0\1\157\1\121\1\0\3\156\1\0"+
    "\4\156\10\0\1\64\5\0\2\156\10\0\2\156\3\0"+
    "\1\157\2\0\3\156\1\0\4\156\15\0\3\143\1\66"+
    "\3\0\1\143\1\0\5\143\1\0\2\143\1\67\14\143"+
    "\2\0\10\143\4\144\1\0\1\144\1\160\1\161\40\144"+
    "\4\145\1\0\2\145\1\162\1\160\37\145\20\125\1\105"+
    "\30\125\2\126\5\125\5\126\2\125\1\126\1\71\1\125"+
    "\4\126\1\125\4\126\2\125\5\126\1\131\1\126\1\125"+
    "\2\126\2\125\2\163\10\125\2\163\3\125\1\164\1\165"+
    "\1\125\3\163\1\125\4\163\10\125\1\131\4\125\32\0"+
    "\1\166\15\0\1\75\2\167\10\75\2\167\3\75\1\170"+
    "\1\136\1\112\3\167\1\75\4\167\10\75\1\77\5\75"+
    "\2\167\10\75\2\167\3\75\1\170\1\75\1\112\3\167"+
    "\1\75\4\167\15\75\1\0\1\171\13\0\1\61\33\0"+
    "\1\172\12\0\1\172\1\61\7\0\1\172\1\0\3\172"+
    "\17\0\2\173\10\0\2\173\3\0\1\174\1\121\1\0"+
    "\3\173\1\0\4\173\10\0\1\64\5\0\2\173\10\0"+
    "\2\173\3\0\1\174\2\0\3\173\1\0\4\173\20\0"+
    "\1\66\15\0\1\67\16\0\1\105\7\0\4\144\1\0"+
    "\1\144\1\175\1\161\40\144\4\145\1\0\2\145\1\162"+
    "\1\176\37\145\1\125\2\177\10\125\2\177\3\125\1\200"+
    "\1\165\1\125\3\177\1\125\4\177\10\125\1\131\5\125"+
    "\2\177\10\125\2\177\3\125\1\201\2\125\3\177\1\125"+
    "\4\177\15\125\31\0\1\202\16\0\1\75\2\203\10\75"+
    "\2\203\3\75\1\204\1\136\1\112\3\203\1\75\4\203"+
    "\10\75\1\77\5\75\2\203\10\75\2\203\3\75\1\204"+
    "\1\75\1\112\3\203\1\75\4\203\15\75\1\0\1\205"+
    "\13\0\1\61\33\0\1\206\12\0\1\206\1\61\7\0"+
    "\1\206\1\0\3\206\17\0\2\207\10\0\2\207\3\0"+
    "\1\210\1\121\1\0\3\207\1\0\4\207\10\0\1\64"+
    "\5\0\2\207\10\0\2\207\3\0\1\210\2\0\3\207"+
    "\1\0\4\207\15\0\3\144\1\211\1\0\1\144\1\160"+
    "\1\161\11\144\1\212\16\144\1\213\7\144\3\145\1\214"+
    "\1\0\2\145\1\162\1\160\10\145\1\215\16\145\1\216"+
    "\7\145\1\125\2\217\10\125\2\217\3\125\1\220\1\165"+
    "\1\125\3\217\1\125\4\217\10\125\1\131\5\125\2\217"+
    "\10\125\2\217\3\125\1\221\2\125\3\217\1\125\4\217"+
    "\15\125\1\0\2\156\10\0\2\156\3\0\1\157\1\67"+
    "\1\0\3\156\1\0\4\156\43\0\1\222\21\0\1\75"+
    "\2\223\10\75\2\223\3\75\1\224\1\136\1\112\3\223"+
    "\1\75\4\223\10\75\1\77\5\75\2\223\10\75\2\223"+
    "\3\75\1\224\1\75\1\112\3\223\1\75\4\223\15\75"+
    "\1\0\1\225\13\0\1\61\33\0\1\226\12\0\1\226"+
    "\1\61\7\0\1\226\1\0\3\226\17\0\2\227\10\0"+
    "\2\227\3\0\1\230\1\121\1\0\3\227\1\0\4\227"+
    "\10\0\1\64\5\0\2\227\10\0\2\227\3\0\1\230"+
    "\2\0\3\227\1\0\4\227\15\0\2\144\1\231\1\211"+
    "\1\0\1\144\1\160\1\161\3\144\2\231\3\144\1\231"+
    "\1\212\1\144\3\231\1\144\4\231\1\144\1\231\3\144"+
    "\1\213\13\144\1\0\1\144\1\160\1\161\11\144\1\212"+
    "\26\144\2\145\1\232\1\214\1\0\2\145\1\162\1\160"+
    "\2\145\2\232\3\145\1\232\1\215\1\145\3\232\1\145"+
    "\4\232\1\145\1\232\3\145\1\216\13\145\1\0\2\145"+
    "\1\162\1\160\10\145\1\215\26\145\1\125\2\233\10\125"+
    "\2\233\3\125\1\234\1\165\1\125\3\233\1\125\4\233"+
    "\10\125\1\131\5\125\2\233\10\125\2\233\3\125\1\235"+
    "\2\125\3\233\1\125\4\233\15\125\1\0\2\173\10\0"+
    "\2\173\3\0\1\174\1\67\1\0\3\173\1\0\4\173"+
    "\15\0\33\222\1\236\14\222\1\75\2\237\10\75\2\237"+
    "\3\75\1\240\1\136\1\112\3\237\1\75\4\237\10\75"+
    "\1\77\5\75\2\237\10\75\2\237\3\75\1\240\1\75"+
    "\1\112\3\237\1\75\4\237\15\75\15\0\1\61\33\0"+
    "\1\225\12\0\1\225\1\61\7\0\1\225\1\0\3\225"+
    "\17\0\2\241\10\0\2\241\3\0\1\242\1\121\1\0"+
    "\3\241\1\0\4\241\10\0\1\64\5\0\2\241\10\0"+
    "\2\241\3\0\1\242\2\0\3\241\1\0\4\241\15\0"+
    "\1\144\2\231\1\243\1\0\1\144\1\160\1\161\3\144"+
    "\2\231\3\144\1\231\1\212\1\144\3\231\1\144\4\231"+
    "\1\144\2\231\1\144\1\244\1\213\2\144\1\231\4\144"+
    "\1\145\2\232\1\245\1\0\2\145\1\162\1\160\2\145"+
    "\2\232\3\145\1\232\1\215\1\145\3\232\1\145\4\232"+
    "\1\145\2\232\1\145\1\246\1\216\2\145\1\232\4\145"+
    "\1\125\2\247\10\125\2\247\3\125\1\250\1\165\1\125"+
    "\3\247\1\125\4\247\10\125\1\131\5\125\2\247\10\125"+
    "\2\247\3\125\1\251\2\125\3\247\1\125\4\247\15\125"+
    "\1\0\2\207\10\0\2\207\3\0\1\210\1\67\1\0"+
    "\3\207\1\0\4\207\15\0\33\222\1\252\14\222\1\75"+
    "\2\253\10\75\2\253\3\75\1\254\1\136\1\112\3\253"+
    "\1\75\4\253\10\75\1\77\5\75\2\253\10\75\2\253"+
    "\3\75\1\254\1\75\1\112\3\253\1\75\4\253\15\75"+
    "\1\0\2\255\10\0\2\255\3\0\1\256\1\121\1\0"+
    "\3\255\1\0\4\255\10\0\1\64\5\0\2\255\10\0"+
    "\2\255\3\0\1\256\2\0\3\255\1\0\4\255\15\0"+
    "\2\144\1\231\1\243\1\0\1\144\1\160\1\161\3\144"+
    "\2\231\3\144\1\231\1\212\1\144\3\231\1\144\4\231"+
    "\1\144\1\231\2\144\1\244\1\213\7\144\3\257\1\244"+
    "\1\0\1\144\1\175\1\260\1\261\5\257\1\144\2\257"+
    "\1\144\14\257\2\144\10\257\2\145\1\232\1\245\1\0"+
    "\2\145\1\162\1\160\2\145\2\232\3\145\1\232\1\215"+
    "\1\145\3\232\1\145\4\232\1\145\1\232\2\145\1\246"+
    "\1\216\7\145\3\262\1\246\1\0\1\145\1\261\1\263"+
    "\1\176\5\262\1\145\2\262\1\145\14\262\2\145\10\262"+
    "\1\125\2\264\10\125\2\264\3\125\1\265\1\165\1\125"+
    "\3\264\1\125\4\264\10\125\1\131\5\125\2\264\10\125"+
    "\2\264\3\125\1\266\2\125\3\264\1\125\4\264\15\125"+
    "\1\0\2\227\10\0\2\227\3\0\1\230\1\67\1\0"+
    "\3\227\1\0\4\227\15\0\21\222\1\67\26\222\1\75"+
    "\2\267\10\75\2\267\3\75\1\270\1\136\1\112\3\267"+
    "\1\75\4\267\10\75\1\77\5\75\2\267\10\75\2\267"+
    "\3\75\1\270\1\75\1\112\3\267\1\75\4\267\15\75"+
    "\1\0\2\271\10\0\2\271\3\0\1\272\1\121\1\0"+
    "\3\271\1\0\4\271\10\0\1\64\5\0\2\271\10\0"+
    "\2\271\3\0\1\272\2\0\3\271\1\0\4\271\15\0"+
    "\3\257\1\211\1\0\1\144\1\160\1\260\1\144\5\257"+
    "\1\144\2\257\1\212\14\257\2\144\13\257\1\211\1\0"+
    "\1\144\1\175\1\260\1\144\5\257\1\144\2\257\1\212"+
    "\14\257\2\144\10\257\4\261\1\0\1\261\1\176\1\273"+
    "\1\175\37\261\3\262\1\214\1\0\2\145\1\263\1\160"+
    "\5\262\1\145\2\262\1\215\14\262\2\145\13\262\1\214"+
    "\1\0\2\145\1\263\1\176\5\262\1\145\2\262\1\215"+
    "\14\262\2\145\10\262\1\125\2\274\10\125\2\274\3\125"+
    "\1\275\1\165\1\125\3\274\1\125\4\274\10\125\1\131"+
    "\5\125\2\274\10\125\2\274\3\125\1\276\2\125\3\274"+
    "\1\125\4\274\15\125\1\0\2\241\10\0\2\241\3\0"+
    "\1\242\1\67\1\0\3\241\1\0\4\241\15\0\1\75"+
    "\2\277\10\75\2\277\3\75\1\300\1\136\1\112\3\277"+
    "\1\75\4\277\10\75\1\77\5\75\2\277\10\75\2\277"+
    "\3\75\1\300\1\75\1\112\3\277\1\75\4\277\15\75"+
    "\1\0\2\301\10\0\2\301\3\0\1\302\1\121\1\0"+
    "\3\301\1\0\4\301\10\0\1\64\5\0\2\301\10\0"+
    "\2\301\3\0\1\302\2\0\3\301\1\0\4\301\15\0"+
    "\4\261\1\0\1\261\1\303\1\273\1\303\37\261\1\125"+
    "\2\304\10\125\2\304\3\125\1\305\1\165\1\125\3\304"+
    "\1\125\4\304\10\125\1\131\5\125\2\304\10\125\2\304"+
    "\3\125\1\306\2\125\3\304\1\125\4\304\15\125\1\0"+
    "\2\255\10\0\2\255\3\0\1\256\1\67\1\0\3\255"+
    "\1\0\4\255\15\0\1\75\2\307\10\75\2\307\3\75"+
    "\1\310\1\136\1\112\3\307\1\75\4\307\10\75\1\77"+
    "\5\75\2\307\10\75\2\307\3\75\1\310\1\75\1\112"+
    "\3\307\1\75\4\307\15\75\1\0\2\311\10\0\2\311"+
    "\3\0\1\312\1\121\1\0\3\311\1\0\4\311\10\0"+
    "\1\64\5\0\2\311\10\0\2\311\3\0\1\312\2\0"+
    "\3\311\1\0\4\311\15\0\3\261\1\313\1\0\1\261"+
    "\1\176\1\273\1\175\10\261\1\314\16\261\1\315\7\261"+
    "\1\125\2\316\10\125\2\316\3\125\1\317\1\165\1\125"+
    "\3\316\1\125\4\316\10\125\1\131\5\125\2\316\10\125"+
    "\2\316\3\125\1\320\2\125\3\316\1\125\4\316\15\125"+
    "\1\0\2\271\10\0\2\271\3\0\1\272\1\67\1\0"+
    "\3\271\1\0\4\271\15\0\1\75\2\321\10\75\2\321"+
    "\3\75\1\322\1\136\1\112\3\321\1\75\4\321\10\75"+
    "\1\77\5\75\2\321\10\75\2\321\3\75\1\322\1\75"+
    "\1\112\3\321\1\75\4\321\15\75\1\0\2\323\10\0"+
    "\2\323\3\0\1\324\1\121\1\0\3\323\1\0\4\323"+
    "\10\0\1\64\5\0\2\323\10\0\2\323\3\0\1\324"+
    "\2\0\3\323\1\0\4\323\15\0\2\261\1\325\1\313"+
    "\1\0\1\261\1\176\1\273\1\175\2\261\2\325\3\261"+
    "\1\325\1\314\1\261\3\325\1\261\4\325\1\261\1\325"+
    "\3\261\1\315\13\261\1\0\1\261\1\176\1\273\1\175"+
    "\10\261\1\314\26\261\1\125\2\326\10\125\2\326\3\125"+
    "\1\327\1\165\1\125\3\326\1\125\4\326\10\125\1\131"+
    "\5\125\2\326\10\125\2\326\3\125\1\330\2\125\3\326"+
    "\1\125\4\326\15\125\1\0\2\301\10\0\2\301\3\0"+
    "\1\302\1\67\1\0\3\301\1\0\4\301\15\0\1\75"+
    "\2\331\10\75\2\331\3\75\1\332\1\136\1\112\3\331"+
    "\1\75\4\331\10\75\1\77\5\75\2\331\10\75\2\331"+
    "\3\75\1\332\1\75\1\112\3\331\1\75\4\331\15\75"+
    "\1\0\2\333\10\0\2\333\3\0\1\334\1\121\1\0"+
    "\3\333\1\0\4\333\10\0\1\64\5\0\2\333\10\0"+
    "\2\333\3\0\1\334\2\0\3\333\1\0\4\333\15\0"+
    "\1\261\2\325\1\335\1\0\1\261\1\176\1\273\1\175"+
    "\2\261\2\325\3\261\1\325\1\314\1\261\3\325\1\261"+
    "\4\325\1\261\2\325\1\261\1\336\1\315\2\261\1\325"+
    "\4\261\1\125\2\337\10\125\2\337\3\125\1\340\1\165"+
    "\1\125\3\337\1\125\4\337\10\125\1\131\5\125\2\337"+
    "\10\125\2\337\3\125\1\341\2\125\3\337\1\125\4\337"+
    "\15\125\1\0\2\311\10\0\2\311\3\0\1\312\1\67"+
    "\1\0\3\311\1\0\4\311\15\0\1\75\2\342\10\75"+
    "\2\342\3\75\1\343\1\136\1\112\3\342\1\75\4\342"+
    "\10\75\1\77\5\75\2\342\10\75\2\342\3\75\1\343"+
    "\1\75\1\112\3\342\1\75\4\342\15\75\1\0\2\344"+
    "\10\0\2\344\3\0\1\345\1\121\1\0\3\344\1\0"+
    "\4\344\10\0\1\64\5\0\2\344\10\0\2\344\3\0"+
    "\1\345\2\0\3\344\1\0\4\344\15\0\2\261\1\325"+
    "\1\335\1\0\1\261\1\176\1\273\1\175\2\261\2\325"+
    "\3\261\1\325\1\314\1\261\3\325\1\261\4\325\1\261"+
    "\1\325\2\261\1\336\1\315\7\261\3\346\1\336\1\0"+
    "\1\261\1\303\1\347\1\303\5\346\1\261\2\346\1\261"+
    "\14\346\2\261\10\346\1\125\2\350\10\125\2\350\3\125"+
    "\1\351\1\165\1\125\3\350\1\125\4\350\10\125\1\131"+
    "\5\125\2\350\10\125\2\350\3\125\1\352\2\125\3\350"+
    "\1\125\4\350\15\125\1\0\2\323\10\0\2\323\3\0"+
    "\1\324\1\67\1\0\3\323\1\0\4\323\15\0\1\75"+
    "\2\353\10\75\2\353\3\75\1\354\1\136\1\112\3\353"+
    "\1\75\4\353\10\75\1\77\5\75\2\353\10\75\2\353"+
    "\3\75\1\354\1\75\1\112\3\353\1\75\4\353\15\75"+
    "\1\0\2\355\10\0\2\355\3\0\1\356\1\121\1\0"+
    "\3\355\1\0\4\355\10\0\1\64\5\0\2\355\10\0"+
    "\2\355\3\0\1\356\2\0\3\355\1\0\4\355\15\0"+
    "\3\346\1\313\1\0\1\261\1\176\1\347\1\175\5\346"+
    "\1\261\2\346\1\314\14\346\2\261\13\346\1\313\1\0"+
    "\1\261\1\303\1\347\1\303\5\346\1\261\2\346\1\314"+
    "\14\346\2\261\10\346\1\125\2\357\10\125\2\357\3\125"+
    "\1\360\1\165\1\125\3\357\1\125\4\357\10\125\1\131"+
    "\5\125\2\357\10\125\2\357\3\125\1\361\2\125\3\357"+
    "\1\125\4\357\15\125\1\0\2\333\10\0\2\333\3\0"+
    "\1\334\1\67\1\0\3\333\1\0\4\333\15\0\1\75"+
    "\2\362\10\75\2\362\3\75\1\363\1\136\1\112\3\362"+
    "\1\75\4\362\10\75\1\77\5\75\2\362\10\75\2\362"+
    "\3\75\1\363\1\75\1\112\3\362\1\75\4\362\15\75"+
    "\1\0\2\364\10\0\2\364\3\0\1\365\1\121\1\0"+
    "\3\364\1\0\4\364\10\0\1\64\5\0\2\364\10\0"+
    "\2\364\3\0\1\365\2\0\3\364\1\0\4\364\15\0"+
    "\1\125\2\366\10\125\2\366\3\125\1\367\1\165\1\125"+
    "\3\366\1\125\4\366\10\125\1\131\5\125\2\366\10\125"+
    "\2\366\3\125\1\370\2\125\3\366\1\125\4\366\15\125"+
    "\1\0\2\344\10\0\2\344\3\0\1\345\1\67\1\0"+
    "\3\344\1\0\4\344\15\0\1\75\2\371\10\75\2\371"+
    "\3\75\1\372\1\136\1\112\3\371\1\75\4\371\10\75"+
    "\1\77\5\75\2\371\10\75\2\371\3\75\1\372\1\75"+
    "\1\112\3\371\1\75\4\371\15\75\1\0\2\373\10\0"+
    "\2\373\3\0\1\374\1\121\1\0\3\373\1\0\4\373"+
    "\10\0\1\64\5\0\2\373\10\0\2\373\3\0\1\374"+
    "\2\0\3\373\1\0\4\373\15\0\1\125\2\375\10\125"+
    "\2\375\3\125\1\376\1\165\1\125\3\375\1\125\4\375"+
    "\10\125\1\131\5\125\2\375\10\125\2\375\3\125\1\377"+
    "\2\125\3\375\1\125\4\375\15\125\1\0\2\355\10\0"+
    "\2\355\3\0\1\356\1\67\1\0\3\355\1\0\4\355"+
    "\15\0\1\75\2\u0100\10\75\2\u0100\3\75\1\u0101\1\136"+
    "\1\112\3\u0100\1\75\4\u0100\10\75\1\77\5\75\2\u0100"+
    "\10\75\2\u0100\3\75\1\u0101\1\75\1\112\3\u0100\1\75"+
    "\4\u0100\15\75\1\0\2\u0102\10\0\2\u0102\3\0\1\u0103"+
    "\1\121\1\0\3\u0102\1\0\4\u0102\10\0\1\64\5\0"+
    "\2\u0102\10\0\2\u0102\3\0\1\u0103\2\0\3\u0102\1\0"+
    "\4\u0102\15\0\1\125\2\u0104\10\125\2\u0104\3\125\1\u0105"+
    "\1\165\1\125\3\u0104\1\125\4\u0104\10\125\1\131\5\125"+
    "\2\u0104\10\125\2\u0104\3\125\1\u0106\2\125\3\u0104\1\125"+
    "\4\u0104\15\125\1\0\2\364\10\0\2\364\3\0\1\365"+
    "\1\67\1\0\3\364\1\0\4\364\15\0\1\75\2\u0107"+
    "\10\75\2\u0107\3\75\1\u0108\1\136\1\112\3\u0107\1\75"+
    "\4\u0107\10\75\1\77\5\75\2\u0107\10\75\2\u0107\3\75"+
    "\1\u0108\1\75\1\112\3\u0107\1\75\4\u0107\15\75\1\0"+
    "\2\u0109\10\0\2\u0109\3\0\1\u010a\1\121\1\0\3\u0109"+
    "\1\0\4\u0109\10\0\1\64\5\0\2\u0109\10\0\2\u0109"+
    "\3\0\1\u010a\2\0\3\u0109\1\0\4\u0109\15\0\1\125"+
    "\2\u010b\10\125\2\u010b\3\125\1\u010c\1\165\1\125\3\u010b"+
    "\1\125\4\u010b\10\125\1\131\5\125\2\u010b\10\125\2\u010b"+
    "\3\125\1\u010d\2\125\3\u010b\1\125\4\u010b\15\125\1\0"+
    "\2\373\10\0\2\373\3\0\1\374\1\67\1\0\3\373"+
    "\1\0\4\373\15\0\1\75\2\u010e\10\75\2\u010e\3\75"+
    "\1\u010f\1\136\1\112\3\u010e\1\75\4\u010e\10\75\1\77"+
    "\5\75\2\u010e\10\75\2\u010e\3\75\1\u010f\1\75\1\112"+
    "\3\u010e\1\75\4\u010e\15\75\1\0\2\u0110\10\0\2\u0110"+
    "\3\0\1\u0111\1\121\1\0\3\u0110\1\0\4\u0110\10\0"+
    "\1\64\5\0\2\u0110\10\0\2\u0110\3\0\1\u0111\2\0"+
    "\3\u0110\1\0\4\u0110\15\0\1\125\2\u0112\10\125\2\u0112"+
    "\3\125\1\u0113\1\165\1\125\3\u0112\1\125\4\u0112\10\125"+
    "\1\131\5\125\2\u0112\10\125\2\u0112\3\125\1\u0114\2\125"+
    "\3\u0112\1\125\4\u0112\15\125\1\0\2\u0102\10\0\2\u0102"+
    "\3\0\1\u0103\1\67\1\0\3\u0102\1\0\4\u0102\15\0"+
    "\1\75\2\u0115\10\75\2\u0115\3\75\1\u0116\1\136\1\112"+
    "\3\u0115\1\75\4\u0115\10\75\1\77\5\75\2\u0115\10\75"+
    "\2\u0115\3\75\1\u0116\1\75\1\112\3\u0115\1\75\4\u0115"+
    "\15\75\1\0\2\u0117\10\0\2\u0117\3\0\1\u0118\1\121"+
    "\1\0\3\u0117\1\0\4\u0117\10\0\1\64\5\0\2\u0117"+
    "\10\0\2\u0117\3\0\1\u0118\2\0\3\u0117\1\0\4\u0117"+
    "\15\0\1\125\2\u0119\10\125\2\u0119\3\125\1\u011a\1\165"+
    "\1\125\3\u0119\1\125\4\u0119\10\125\1\131\5\125\2\u0119"+
    "\10\125\2\u0119\3\125\1\u011b\2\125\3\u0119\1\125\4\u0119"+
    "\15\125\1\0\2\u0109\10\0\2\u0109\3\0\1\u010a\1\67"+
    "\1\0\3\u0109\1\0\4\u0109\15\0\1\75\2\u011c\10\75"+
    "\2\u011c\3\75\1\u011d\1\136\1\112\3\u011c\1\75\4\u011c"+
    "\10\75\1\77\5\75\2\u011c\10\75\2\u011c\3\75\1\u011d"+
    "\1\75\1\112\3\u011c\1\75\4\u011c\15\75\1\0\2\u011e"+
    "\10\0\2\u011e\3\0\1\u011f\1\121\1\0\3\u011e\1\0"+
    "\4\u011e\10\0\1\64\5\0\2\u011e\10\0\2\u011e\3\0"+
    "\1\u011f\2\0\3\u011e\1\0\4\u011e\15\0\1\125\2\u0120"+
    "\10\125\2\u0120\3\125\1\u0121\1\165\1\125\3\u0120\1\125"+
    "\4\u0120\10\125\1\131\5\125\2\u0120\10\125\2\u0120\3\125"+
    "\1\u0122\2\125\3\u0120\1\125\4\u0120\15\125\1\0\2\u0110"+
    "\10\0\2\u0110\3\0\1\u0111\1\67\1\0\3\u0110\1\0"+
    "\4\u0110\15\0\1\75\2\u0123\10\75\2\u0123\3\75\1\u0124"+
    "\1\136\1\112\3\u0123\1\75\4\u0123\10\75\1\77\5\75"+
    "\2\u0123\10\75\2\u0123\3\75\1\u0124\1\75\1\112\3\u0123"+
    "\1\75\4\u0123\15\75\1\0\2\u0125\10\0\2\u0125\3\0"+
    "\1\u0126\1\121\1\0\3\u0125\1\0\4\u0125\10\0\1\64"+
    "\5\0\2\u0125\10\0\2\u0125\3\0\1\u0126\2\0\3\u0125"+
    "\1\0\4\u0125\15\0\1\125\2\u0127\10\125\2\u0127\3\125"+
    "\1\u0128\1\165\1\125\3\u0127\1\125\4\u0127\10\125\1\131"+
    "\5\125\2\u0127\10\125\2\u0127\3\125\1\u0129\2\125\3\u0127"+
    "\1\125\4\u0127\15\125\1\0\2\u0117\10\0\2\u0117\3\0"+
    "\1\u0118\1\67\1\0\3\u0117\1\0\4\u0117\15\0\1\75"+
    "\2\u012a\10\75\2\u012a\3\75\1\u012b\1\136\1\112\3\u012a"+
    "\1\75\4\u012a\10\75\1\77\5\75\2\u012a\10\75\2\u012a"+
    "\3\75\1\u012b\1\75\1\112\3\u012a\1\75\4\u012a\15\75"+
    "\1\0\2\u012c\10\0\2\u012c\3\0\1\u012d\1\121\1\0"+
    "\3\u012c\1\0\4\u012c\10\0\1\64\5\0\2\u012c\10\0"+
    "\2\u012c\3\0\1\u012d\2\0\3\u012c\1\0\4\u012c\15\0"+
    "\1\125\2\u012e\10\125\2\u012e\3\125\1\u012f\1\165\1\125"+
    "\3\u012e\1\125\4\u012e\10\125\1\131\5\125\2\u012e\10\125"+
    "\2\u012e\3\125\1\u0130\2\125\3\u012e\1\125\4\u012e\15\125"+
    "\1\0\2\u011e\10\0\2\u011e\3\0\1\u011f\1\67\1\0"+
    "\3\u011e\1\0\4\u011e\15\0\1\75\2\u0131\10\75\2\u0131"+
    "\3\75\1\u0132\1\136\1\112\3\u0131\1\75\4\u0131\10\75"+
    "\1\77\5\75\2\u0131\10\75\2\u0131\3\75\1\u0132\1\75"+
    "\1\112\3\u0131\1\75\4\u0131\15\75\1\0\2\u0133\10\0"+
    "\2\u0133\3\0\1\u0134\1\121\1\0\3\u0133\1\0\4\u0133"+
    "\10\0\1\64\5\0\2\u0133\10\0\2\u0133\3\0\1\u0134"+
    "\2\0\3\u0133\1\0\4\u0133\15\0\1\125\2\u0135\10\125"+
    "\2\u0135\3\125\1\u0136\1\165\1\125\3\u0135\1\125\4\u0135"+
    "\10\125\1\131\5\125\2\u0135\10\125\2\u0135\3\125\1\u0137"+
    "\2\125\3\u0135\1\125\4\u0135\15\125\1\0\2\u0125\10\0"+
    "\2\u0125\3\0\1\u0126\1\67\1\0\3\u0125\1\0\4\u0125"+
    "\15\0\1\75\2\u0138\10\75\2\u0138\3\75\1\u0139\1\136"+
    "\1\112\3\u0138\1\75\4\u0138\10\75\1\77\5\75\2\u0138"+
    "\10\75\2\u0138\3\75\1\u0139\1\75\1\112\3\u0138\1\75"+
    "\4\u0138\15\75\1\0\2\u013a\10\0\2\u013a\3\0\1\u013b"+
    "\1\121\1\0\3\u013a\1\0\4\u013a\10\0\1\64\5\0"+
    "\2\u013a\10\0\2\u013a\3\0\1\u013b\2\0\3\u013a\1\0"+
    "\4\u013a\15\0\1\125\2\u013c\10\125\2\u013c\3\125\1\u013d"+
    "\1\165\1\125\3\u013c\1\125\4\u013c\10\125\1\131\5\125"+
    "\2\u013c\10\125\2\u013c\3\125\1\u013e\2\125\3\u013c\1\125"+
    "\4\u013c\15\125\1\0\2\u012c\10\0\2\u012c\3\0\1\u012d"+
    "\1\67\1\0\3\u012c\1\0\4\u012c\15\0\1\75\2\u013f"+
    "\10\75\2\u013f\3\75\1\u0140\1\136\1\112\3\u013f\1\75"+
    "\4\u013f\10\75\1\77\5\75\2\u013f\10\75\2\u013f\3\75"+
    "\1\u0140\1\75\1\112\3\u013f\1\75\4\u013f\15\75\1\0"+
    "\2\u0141\10\0\2\u0141\3\0\1\u0142\1\121\1\0\3\u0141"+
    "\1\0\4\u0141\10\0\1\64\5\0\2\u0141\10\0\2\u0141"+
    "\3\0\1\u0142\2\0\3\u0141\1\0\4\u0141\15\0\1\125"+
    "\2\u0143\10\125\2\u0143\3\125\1\u0144\1\165\1\125\3\u0143"+
    "\1\125\4\u0143\10\125\1\131\5\125\2\u0143\10\125\2\u0143"+
    "\3\125\1\u0145\2\125\3\u0143\1\125\4\u0143\15\125\1\0"+
    "\2\u0133\10\0\2\u0133\3\0\1\u0134\1\67\1\0\3\u0133"+
    "\1\0\4\u0133\15\0\1\75\2\u0146\10\75\2\u0146\3\75"+
    "\1\u0147\1\136\1\112\3\u0146\1\75\4\u0146\10\75\1\77"+
    "\5\75\2\u0146\10\75\2\u0146\3\75\1\u0147\1\75\1\112"+
    "\3\u0146\1\75\4\u0146\15\75\1\0\2\u0148\10\0\2\u0148"+
    "\3\0\1\u0149\1\121\1\0\3\u0148\1\0\4\u0148\10\0"+
    "\1\64\5\0\2\u0148\10\0\2\u0148\3\0\1\u0149\2\0"+
    "\3\u0148\1\0\4\u0148\15\0\1\125\2\u014a\10\125\2\u014a"+
    "\3\125\1\u014b\1\165\1\125\3\u014a\1\125\4\u014a\10\125"+
    "\1\131\5\125\2\u014a\10\125\2\u014a\3\125\1\u014c\2\125"+
    "\3\u014a\1\125\4\u014a\15\125\1\0\2\u013a\10\0\2\u013a"+
    "\3\0\1\u013b\1\67\1\0\3\u013a\1\0\4\u013a\15\0"+
    "\1\75\2\u014d\10\75\2\u014d\3\75\1\u014e\1\136\1\112"+
    "\3\u014d\1\75\4\u014d\10\75\1\77\5\75\2\u014d\10\75"+
    "\2\u014d\3\75\1\u014e\1\75\1\112\3\u014d\1\75\4\u014d"+
    "\15\75\1\0\2\u014f\10\0\2\u014f\3\0\1\u0150\1\121"+
    "\1\0\3\u014f\1\0\4\u014f\10\0\1\64\5\0\2\u014f"+
    "\10\0\2\u014f\3\0\1\u0150\2\0\3\u014f\1\0\4\u014f"+
    "\15\0\1\125\2\u0151\10\125\2\u0151\3\125\1\u0152\1\165"+
    "\1\125\3\u0151\1\125\4\u0151\10\125\1\131\5\125\2\u0151"+
    "\10\125\2\u0151\3\125\1\u0153\2\125\3\u0151\1\125\4\u0151"+
    "\15\125\1\0\2\u0141\10\0\2\u0141\3\0\1\u0142\1\67"+
    "\1\0\3\u0141\1\0\4\u0141\15\0\1\75\2\u0154\10\75"+
    "\2\u0154\3\75\1\u0155\1\136\1\112\3\u0154\1\75\4\u0154"+
    "\10\75\1\77\5\75\2\u0154\10\75\2\u0154\3\75\1\u0155"+
    "\1\75\1\112\3\u0154\1\75\4\u0154\15\75\1\0\2\u0156"+
    "\10\0\2\u0156\3\0\1\u0157\1\121\1\0\3\u0156\1\0"+
    "\4\u0156\10\0\1\64\5\0\2\u0156\10\0\2\u0156\3\0"+
    "\1\u0157\2\0\3\u0156\1\0\4\u0156\15\0\1\125\2\u0158"+
    "\10\125\2\u0158\3\125\1\u0159\1\165\1\125\3\u0158\1\125"+
    "\4\u0158\10\125\1\131\5\125\2\u0158\10\125\2\u0158\3\125"+
    "\1\u015a\2\125\3\u0158\1\125\4\u0158\15\125\1\0\2\u0148"+
    "\10\0\2\u0148\3\0\1\u0149\1\67\1\0\3\u0148\1\0"+
    "\4\u0148\15\0\1\75\2\u015b\10\75\2\u015b\3\75\1\u015c"+
    "\1\136\1\112\3\u015b\1\75\4\u015b\10\75\1\77\5\75"+
    "\2\u015b\10\75\2\u015b\3\75\1\u015c\1\75\1\112\3\u015b"+
    "\1\75\4\u015b\15\75\1\0\2\u015d\10\0\2\u015d\3\0"+
    "\1\u015e\1\121\1\0\3\u015d\1\0\4\u015d\10\0\1\64"+
    "\5\0\2\u015d\10\0\2\u015d\3\0\1\u015e\2\0\3\u015d"+
    "\1\0\4\u015d\15\0\1\125\2\u015f\10\125\2\u015f\3\125"+
    "\1\u0160\1\165\1\125\3\u015f\1\125\4\u015f\10\125\1\131"+
    "\5\125\2\u015f\10\125\2\u015f\3\125\1\u0161\2\125\3\u015f"+
    "\1\125\4\u015f\15\125\1\0\2\u014f\10\0\2\u014f\3\0"+
    "\1\u0150\1\67\1\0\3\u014f\1\0\4\u014f\15\0\1\75"+
    "\2\u0162\10\75\2\u0162\3\75\1\u0163\1\136\1\112\3\u0162"+
    "\1\75\4\u0162\10\75\1\77\5\75\2\u0162\10\75\2\u0162"+
    "\3\75\1\u0163\1\75\1\112\3\u0162\1\75\4\u0162\15\75"+
    "\1\0\2\u0164\10\0\2\u0164\3\0\1\u0165\1\121\1\0"+
    "\3\u0164\1\0\4\u0164\10\0\1\64\5\0\2\u0164\10\0"+
    "\2\u0164\3\0\1\u0165\2\0\3\u0164\1\0\4\u0164\15\0"+
    "\1\125\2\u0166\10\125\2\u0166\3\125\1\u0167\1\165\1\125"+
    "\3\u0166\1\125\4\u0166\10\125\1\131\5\125\2\u0166\10\125"+
    "\2\u0166\3\125\1\u0168\2\125\3\u0166\1\125\4\u0166\15\125"+
    "\1\0\2\u0156\10\0\2\u0156\3\0\1\u0157\1\67\1\0"+
    "\3\u0156\1\0\4\u0156\15\0\1\75\2\u0169\10\75\2\u0169"+
    "\3\75\1\u016a\1\136\1\112\3\u0169\1\75\4\u0169\10\75"+
    "\1\77\5\75\2\u0169\10\75\2\u0169\3\75\1\u016a\1\75"+
    "\1\112\3\u0169\1\75\4\u0169\15\75\1\0\2\u016b\10\0"+
    "\2\u016b\3\0\1\u016c\1\121\1\0\3\u016b\1\0\4\u016b"+
    "\10\0\1\64\5\0\2\u016b\10\0\2\u016b\3\0\1\u016c"+
    "\2\0\3\u016b\1\0\4\u016b\15\0\1\125\2\u016d\10\125"+
    "\2\u016d\3\125\1\u016e\1\165\1\125\3\u016d\1\125\4\u016d"+
    "\10\125\1\131\5\125\2\u016d\10\125\2\u016d\3\125\1\u016f"+
    "\2\125\3\u016d\1\125\4\u016d\15\125\1\0\2\u015d\10\0"+
    "\2\u015d\3\0\1\u015e\1\67\1\0\3\u015d\1\0\4\u015d"+
    "\15\0\1\75\2\u0170\10\75\2\u0170\3\75\1\u0171\1\136"+
    "\1\112\3\u0170\1\75\4\u0170\10\75\1\77\5\75\2\u0170"+
    "\10\75\2\u0170\3\75\1\u0171\1\75\1\112\3\u0170\1\75"+
    "\4\u0170\15\75\1\0\2\u0172\10\0\2\u0172\3\0\1\u0173"+
    "\1\121\1\0\3\u0172\1\0\4\u0172\10\0\1\64\5\0"+
    "\2\u0172\10\0\2\u0172\3\0\1\u0173\2\0\3\u0172\1\0"+
    "\4\u0172\15\0\1\125\2\u0174\10\125\2\u0174\3\125\1\u0175"+
    "\1\165\1\125\3\u0174\1\125\4\u0174\10\125\1\131\5\125"+
    "\2\u0174\10\125\2\u0174\3\125\1\u0176\2\125\3\u0174\1\125"+
    "\4\u0174\15\125\1\0\2\u0164\10\0\2\u0164\3\0\1\u0165"+
    "\1\67\1\0\3\u0164\1\0\4\u0164\15\0\1\75\2\u0177"+
    "\10\75\2\u0177\3\75\1\u0178\1\136\1\112\3\u0177\1\75"+
    "\4\u0177\10\75\1\77\5\75\2\u0177\10\75\2\u0177\3\75"+
    "\1\u0178\1\75\1\112\3\u0177\1\75\4\u0177\15\75\1\0"+
    "\2\u0179\10\0\2\u0179\3\0\1\u017a\1\121\1\0\3\u0179"+
    "\1\0\4\u0179\10\0\1\64\5\0\2\u0179\10\0\2\u0179"+
    "\3\0\1\u017a\2\0\3\u0179\1\0\4\u0179\15\0\1\125"+
    "\2\u017b\10\125\2\u017b\3\125\1\u017c\1\165\1\125\3\u017b"+
    "\1\125\4\u017b\10\125\1\131\5\125\2\u017b\10\125\2\u017b"+
    "\3\125\1\u017d\2\125\3\u017b\1\125\4\u017b\15\125\1\0"+
    "\2\u016b\10\0\2\u016b\3\0\1\u016c\1\67\1\0\3\u016b"+
    "\1\0\4\u016b\15\0\1\75\2\u017e\10\75\2\u017e\3\75"+
    "\1\u017f\1\136\1\112\3\u017e\1\75\4\u017e\10\75\1\77"+
    "\5\75\2\u017e\10\75\2\u017e\3\75\1\u017f\1\75\1\112"+
    "\3\u017e\1\75\4\u017e\15\75\1\0\2\u0180\10\0\2\u0180"+
    "\3\0\1\u0181\1\121\1\0\3\u0180\1\0\4\u0180\10\0"+
    "\1\64\5\0\2\u0180\10\0\2\u0180\3\0\1\u0181\2\0"+
    "\3\u0180\1\0\4\u0180\15\0\1\125\2\u0182\10\125\2\u0182"+
    "\3\125\1\u0183\1\165\1\125\3\u0182\1\125\4\u0182\10\125"+
    "\1\131\5\125\2\u0182\10\125\2\u0182\3\125\1\u0184\2\125"+
    "\3\u0182\1\125\4\u0182\15\125\1\0\2\u0172\10\0\2\u0172"+
    "\3\0\1\u0173\1\67\1\0\3\u0172\1\0\4\u0172\15\0"+
    "\1\75\2\u0185\10\75\2\u0185\3\75\1\u0186\1\136\1\112"+
    "\3\u0185\1\75\4\u0185\10\75\1\77\5\75\2\u0185\10\75"+
    "\2\u0185\3\75\1\u0186\1\75\1\112\3\u0185\1\75\4\u0185"+
    "\15\75\1\0\2\u0187\10\0\2\u0187\3\0\1\u0188\1\121"+
    "\1\0\3\u0187\1\0\4\u0187\10\0\1\64\5\0\2\u0187"+
    "\10\0\2\u0187\3\0\1\u0188\2\0\3\u0187\1\0\4\u0187"+
    "\15\0\1\125\2\u0189\10\125\2\u0189\3\125\1\u018a\1\165"+
    "\1\125\3\u0189\1\125\4\u0189\10\125\1\131\5\125\2\u0189"+
    "\10\125\2\u0189\3\125\1\u018b\2\125\3\u0189\1\125\4\u0189"+
    "\15\125\1\0\2\u0179\10\0\2\u0179\3\0\1\u017a\1\67"+
    "\1\0\3\u0179\1\0\4\u0179\15\0\1\75\2\u018c\10\75"+
    "\2\u018c\3\75\1\u018d\1\136\1\112\3\u018c\1\75\4\u018c"+
    "\10\75\1\77\5\75\2\u018c\10\75\2\u018c\3\75\1\u018d"+
    "\1\75\1\112\3\u018c\1\75\4\u018c\15\75\1\0\2\u018e"+
    "\10\0\2\u018e\3\0\1\u018f\1\121\1\0\3\u018e\1\0"+
    "\4\u018e\10\0\1\64\5\0\2\u018e\10\0\2\u018e\3\0"+
    "\1\u018f\2\0\3\u018e\1\0\4\u018e\15\0\1\125\2\u0190"+
    "\10\125\2\u0190\3\125\1\u0191\1\165\1\125\3\u0190\1\125"+
    "\4\u0190\10\125\1\131\5\125\2\u0190\10\125\2\u0190\3\125"+
    "\1\u0192\2\125\3\u0190\1\125\4\u0190\15\125\1\0\2\u0180"+
    "\10\0\2\u0180\3\0\1\u0181\1\67\1\0\3\u0180\1\0"+
    "\4\u0180\15\0\1\75\2\u0193\10\75\2\u0193\3\75\1\u0194"+
    "\1\136\1\112\3\u0193\1\75\4\u0193\10\75\1\77\5\75"+
    "\2\u0193\10\75\2\u0193\3\75\1\u0194\1\75\1\112\3\u0193"+
    "\1\75\4\u0193\15\75\1\0\2\u0195\10\0\2\u0195\3\0"+
    "\1\u0196\1\121\1\0\3\u0195\1\0\4\u0195\10\0\1\64"+
    "\5\0\2\u0195\10\0\2\u0195\3\0\1\u0196\2\0\3\u0195"+
    "\1\0\4\u0195\15\0\1\125\2\u0197\10\125\2\u0197\3\125"+
    "\1\u0198\1\165\1\125\3\u0197\1\125\4\u0197\10\125\1\131"+
    "\5\125\2\u0197\10\125\2\u0197\3\125\1\u0199\2\125\3\u0197"+
    "\1\125\4\u0197\15\125\1\0\2\u0187\10\0\2\u0187\3\0"+
    "\1\u0188\1\67\1\0\3\u0187\1\0\4\u0187\15\0\1\75"+
    "\2\u019a\10\75\2\u019a\3\75\1\u019b\1\136\1\112\3\u019a"+
    "\1\75\4\u019a\10\75\1\77\5\75\2\u019a\10\75\2\u019a"+
    "\3\75\1\u019b\1\75\1\112\3\u019a\1\75\4\u019a\15\75"+
    "\1\0\2\u019c\10\0\2\u019c\3\0\1\u019d\1\121\1\0"+
    "\3\u019c\1\0\4\u019c\10\0\1\64\5\0\2\u019c\10\0"+
    "\2\u019c\3\0\1\u019d\2\0\3\u019c\1\0\4\u019c\15\0"+
    "\1\125\2\u019e\10\125\2\u019e\3\125\1\u019f\1\165\1\125"+
    "\3\u019e\1\125\4\u019e\10\125\1\131\5\125\2\u019e\10\125"+
    "\2\u019e\3\125\1\u01a0\2\125\3\u019e\1\125\4\u019e\15\125"+
    "\1\0\2\u018e\10\0\2\u018e\3\0\1\u018f\1\67\1\0"+
    "\3\u018e\1\0\4\u018e\15\0\1\75\2\u01a1\10\75\2\u01a1"+
    "\3\75\1\u01a2\1\136\1\112\3\u01a1\1\75\4\u01a1\10\75"+
    "\1\77\5\75\2\u01a1\10\75\2\u01a1\3\75\1\u01a2\1\75"+
    "\1\112\3\u01a1\1\75\4\u01a1\15\75\1\0\2\u01a3\10\0"+
    "\2\u01a3\3\0\1\u01a4\1\121\1\0\3\u01a3\1\0\4\u01a3"+
    "\10\0\1\64\5\0\2\u01a3\10\0\2\u01a3\3\0\1\u01a4"+
    "\2\0\3\u01a3\1\0\4\u01a3\15\0\1\125\2\u01a5\10\125"+
    "\2\u01a5\3\125\1\u01a6\1\165\1\125\3\u01a5\1\125\4\u01a5"+
    "\10\125\1\131\5\125\2\u01a5\10\125\2\u01a5\3\125\1\u01a7"+
    "\2\125\3\u01a5\1\125\4\u01a5\15\125\1\0\2\u0195\10\0"+
    "\2\u0195\3\0\1\u0196\1\67\1\0\3\u0195\1\0\4\u0195"+
    "\15\0\1\75\2\u01a8\10\75\2\u01a8\3\75\1\u01a9\1\136"+
    "\1\112\3\u01a8\1\75\4\u01a8\10\75\1\77\5\75\2\u01a8"+
    "\10\75\2\u01a8\3\75\1\u01a9\1\75\1\112\3\u01a8\1\75"+
    "\4\u01a8\15\75\1\0\2\u01aa\10\0\2\u01aa\3\0\1\u01ab"+
    "\1\121\1\0\3\u01aa\1\0\4\u01aa\10\0\1\64\5\0"+
    "\2\u01aa\10\0\2\u01aa\3\0\1\u01ab\2\0\3\u01aa\1\0"+
    "\4\u01aa\15\0\1\125\2\u01ac\10\125\2\u01ac\3\125\1\u01ad"+
    "\1\165\1\125\3\u01ac\1\125\4\u01ac\10\125\1\131\5\125"+
    "\2\u01ac\10\125\2\u01ac\3\125\1\u01ae\2\125\3\u01ac\1\125"+
    "\4\u01ac\15\125\1\0\2\u019c\10\0\2\u019c\3\0\1\u019d"+
    "\1\67\1\0\3\u019c\1\0\4\u019c\15\0\1\75\2\u01af"+
    "\10\75\2\u01af\3\75\1\u01b0\1\136\1\112\3\u01af\1\75"+
    "\4\u01af\10\75\1\77\5\75\2\u01af\10\75\2\u01af\3\75"+
    "\1\u01b0\1\75\1\112\3\u01af\1\75\4\u01af\15\75\1\0"+
    "\2\u01b1\10\0\2\u01b1\3\0\1\u01b2\1\121\1\0\3\u01b1"+
    "\1\0\4\u01b1\10\0\1\64\5\0\2\u01b1\10\0\2\u01b1"+
    "\3\0\1\u01b2\2\0\3\u01b1\1\0\4\u01b1\15\0\1\125"+
    "\2\u01b3\10\125\2\u01b3\3\125\1\u01b4\1\165\1\125\3\u01b3"+
    "\1\125\4\u01b3\10\125\1\131\5\125\2\u01b3\10\125\2\u01b3"+
    "\3\125\1\u01b5\2\125\3\u01b3\1\125\4\u01b3\15\125\1\0"+
    "\2\u01a3\10\0\2\u01a3\3\0\1\u01a4\1\67\1\0\3\u01a3"+
    "\1\0\4\u01a3\15\0\1\75\2\u01b6\10\75\2\u01b6\3\75"+
    "\1\u01b7\1\136\1\112\3\u01b6\1\75\4\u01b6\10\75\1\77"+
    "\5\75\2\u01b6\10\75\2\u01b6\3\75\1\u01b7\1\75\1\112"+
    "\3\u01b6\1\75\4\u01b6\15\75\1\0\2\u01b8\10\0\2\u01b8"+
    "\3\0\1\u01b9\1\121\1\0\3\u01b8\1\0\4\u01b8\10\0"+
    "\1\64\5\0\2\u01b8\10\0\2\u01b8\3\0\1\u01b9\2\0"+
    "\3\u01b8\1\0\4\u01b8\15\0\1\125\2\u01ba\10\125\2\u01ba"+
    "\3\125\1\u01bb\1\165\1\125\3\u01ba\1\125\4\u01ba\10\125"+
    "\1\131\5\125\2\u01ba\10\125\2\u01ba\3\125\1\u01bc\2\125"+
    "\3\u01ba\1\125\4\u01ba\15\125\1\0\2\u01aa\10\0\2\u01aa"+
    "\3\0\1\u01ab\1\67\1\0\3\u01aa\1\0\4\u01aa\15\0"+
    "\1\75\2\u01bd\10\75\2\u01bd\3\75\1\u01be\1\136\1\112"+
    "\3\u01bd\1\75\4\u01bd\10\75\1\77\5\75\2\u01bd\10\75"+
    "\2\u01bd\3\75\1\u01be\1\75\1\112\3\u01bd\1\75\4\u01bd"+
    "\15\75\1\0\2\u01bf\10\0\2\u01bf\3\0\1\u01c0\1\121"+
    "\1\0\3\u01bf\1\0\4\u01bf\10\0\1\64\5\0\2\u01bf"+
    "\10\0\2\u01bf\3\0\1\u01c0\2\0\3\u01bf\1\0\4\u01bf"+
    "\15\0\1\125\2\u01c1\10\125\2\u01c1\3\125\1\u01c2\1\165"+
    "\1\125\3\u01c1\1\125\4\u01c1\10\125\1\131\5\125\2\u01c1"+
    "\10\125\2\u01c1\3\125\1\u01c3\2\125\3\u01c1\1\125\4\u01c1"+
    "\15\125\1\0\2\u01b1\10\0\2\u01b1\3\0\1\u01b2\1\67"+
    "\1\0\3\u01b1\1\0\4\u01b1\15\0\1\75\2\u01c4\10\75"+
    "\2\u01c4\3\75\1\u01c5\1\136\1\112\3\u01c4\1\75\4\u01c4"+
    "\10\75\1\77\5\75\2\u01c4\10\75\2\u01c4\3\75\1\u01c5"+
    "\1\75\1\112\3\u01c4\1\75\4\u01c4\15\75\1\0\2\u01c6"+
    "\10\0\2\u01c6\3\0\1\u01c7\1\121\1\0\3\u01c6\1\0"+
    "\4\u01c6\10\0\1\64\5\0\2\u01c6\10\0\2\u01c6\3\0"+
    "\1\u01c7\2\0\3\u01c6\1\0\4\u01c6\15\0\1\125\2\u01c8"+
    "\10\125\2\u01c8\3\125\1\u01c9\1\165\1\125\3\u01c8\1\125"+
    "\4\u01c8\10\125\1\131\5\125\2\u01c8\10\125\2\u01c8\3\125"+
    "\1\u01ca\2\125\3\u01c8\1\125\4\u01c8\15\125\1\0\2\u01b8"+
    "\10\0\2\u01b8\3\0\1\u01b9\1\67\1\0\3\u01b8\1\0"+
    "\4\u01b8\15\0\1\75\2\u01cb\10\75\2\u01cb\3\75\1\u01cc"+
    "\1\136\1\112\3\u01cb\1\75\4\u01cb\10\75\1\77\5\75"+
    "\2\u01cb\10\75\2\u01cb\3\75\1\u01cc\1\75\1\112\3\u01cb"+
    "\1\75\4\u01cb\15\75\1\0\2\u01cd\10\0\2\u01cd\3\0"+
    "\1\u01ce\1\121\1\0\3\u01cd\1\0\4\u01cd\10\0\1\64"+
    "\5\0\2\u01cd\10\0\2\u01cd\3\0\1\u01ce\2\0\3\u01cd"+
    "\1\0\4\u01cd\15\0\1\125\2\u01cf\10\125\2\u01cf\3\125"+
    "\1\u01d0\1\165\1\125\3\u01cf\1\125\4\u01cf\10\125\1\131"+
    "\5\125\2\u01cf\10\125\2\u01cf\3\125\1\u01d1\2\125\3\u01cf"+
    "\1\125\4\u01cf\15\125\1\0\2\u01bf\10\0\2\u01bf\3\0"+
    "\1\u01c0\1\67\1\0\3\u01bf\1\0\4\u01bf\15\0\1\75"+
    "\2\u01d2\10\75\2\u01d2\3\75\1\u01d3\1\136\1\112\3\u01d2"+
    "\1\75\4\u01d2\10\75\1\77\5\75\2\u01d2\10\75\2\u01d2"+
    "\3\75\1\u01d3\1\75\1\112\3\u01d2\1\75\4\u01d2\15\75"+
    "\1\0\2\u01d4\10\0\2\u01d4\3\0\1\u01d5\1\121\1\0"+
    "\3\u01d4\1\0\4\u01d4\10\0\1\64\5\0\2\u01d4\10\0"+
    "\2\u01d4\3\0\1\u01d5\2\0\3\u01d4\1\0\4\u01d4\15\0"+
    "\1\125\2\u01d6\10\125\2\u01d6\3\125\1\u01d7\1\165\1\125"+
    "\3\u01d6\1\125\4\u01d6\10\125\1\131\5\125\2\u01d6\10\125"+
    "\2\u01d6\3\125\1\u01d8\2\125\3\u01d6\1\125\4\u01d6\15\125"+
    "\1\0\2\u01c6\10\0\2\u01c6\3\0\1\u01c7\1\67\1\0"+
    "\3\u01c6\1\0\4\u01c6\15\0\1\75\2\u01d9\10\75\2\u01d9"+
    "\3\75\1\u01da\1\136\1\112\3\u01d9\1\75\4\u01d9\10\75"+
    "\1\77\5\75\2\u01d9\10\75\2\u01d9\3\75\1\u01da\1\75"+
    "\1\112\3\u01d9\1\75\4\u01d9\15\75\1\0\2\u01db\10\0"+
    "\2\u01db\3\0\1\u01dc\1\121\1\0\3\u01db\1\0\4\u01db"+
    "\10\0\1\64\5\0\2\u01db\10\0\2\u01db\3\0\1\u01dc"+
    "\2\0\3\u01db\1\0\4\u01db\15\0\1\125\2\u01dd\10\125"+
    "\2\u01dd\3\125\1\u01de\1\165\1\125\3\u01dd\1\125\4\u01dd"+
    "\10\125\1\131\5\125\2\u01dd\10\125\2\u01dd\3\125\1\u01df"+
    "\2\125\3\u01dd\1\125\4\u01dd\15\125\1\0\2\u01cd\10\0"+
    "\2\u01cd\3\0\1\u01ce\1\67\1\0\3\u01cd\1\0\4\u01cd"+
    "\15\0\1\75\2\u01e0\10\75\2\u01e0\3\75\1\u01e1\1\136"+
    "\1\112\3\u01e0\1\75\4\u01e0\10\75\1\77\5\75\2\u01e0"+
    "\10\75\2\u01e0\3\75\1\u01e1\1\75\1\112\3\u01e0\1\75"+
    "\4\u01e0\15\75\1\0\2\u01e2\10\0\2\u01e2\3\0\1\u01e3"+
    "\1\121\1\0\3\u01e2\1\0\4\u01e2\10\0\1\64\5\0"+
    "\2\u01e2\10\0\2\u01e2\3\0\1\u01e3\2\0\3\u01e2\1\0"+
    "\4\u01e2\15\0\1\125\2\u01e4\10\125\2\u01e4\3\125\1\u01e5"+
    "\1\165\1\125\3\u01e4\1\125\4\u01e4\10\125\1\131\5\125"+
    "\2\u01e4\10\125\2\u01e4\3\125\1\u01e6\2\125\3\u01e4\1\125"+
    "\4\u01e4\15\125\1\0\2\u01d4\10\0\2\u01d4\3\0\1\u01d5"+
    "\1\67\1\0\3\u01d4\1\0\4\u01d4\15\0\1\75\2\u01e7"+
    "\10\75\2\u01e7\3\75\1\u01e8\1\136\1\112\3\u01e7\1\75"+
    "\4\u01e7\10\75\1\77\5\75\2\u01e7\10\75\2\u01e7\3\75"+
    "\1\u01e8\1\75\1\112\3\u01e7\1\75\4\u01e7\15\75\1\0"+
    "\2\u01e9\10\0\2\u01e9\3\0\1\u01ea\1\121\1\0\3\u01e9"+
    "\1\0\4\u01e9\10\0\1\64\5\0\2\u01e9\10\0\2\u01e9"+
    "\3\0\1\u01ea\2\0\3\u01e9\1\0\4\u01e9\15\0\1\125"+
    "\2\u01eb\10\125\2\u01eb\3\125\1\u01ec\1\165\1\125\3\u01eb"+
    "\1\125\4\u01eb\10\125\1\131\5\125\2\u01eb\10\125\2\u01eb"+
    "\3\125\1\u01ed\2\125\3\u01eb\1\125\4\u01eb\15\125\1\0"+
    "\2\u01db\10\0\2\u01db\3\0\1\u01dc\1\67\1\0\3\u01db"+
    "\1\0\4\u01db\15\0\1\75\2\u01ee\10\75\2\u01ee\3\75"+
    "\1\u01ef\1\136\1\112\3\u01ee\1\75\4\u01ee\10\75\1\77"+
    "\5\75\2\u01ee\10\75\2\u01ee\3\75\1\u01ef\1\75\1\112"+
    "\3\u01ee\1\75\4\u01ee\15\75\1\0\2\u01f0\10\0\2\u01f0"+
    "\3\0\1\u01f1\1\121\1\0\3\u01f0\1\0\4\u01f0\10\0"+
    "\1\64\5\0\2\u01f0\10\0\2\u01f0\3\0\1\u01f1\2\0"+
    "\3\u01f0\1\0\4\u01f0\15\0\1\125\2\u01f2\10\125\2\u01f2"+
    "\3\125\1\u01f3\1\165\1\125\3\u01f2\1\125\4\u01f2\10\125"+
    "\1\131\5\125\2\u01f2\10\125\2\u01f2\3\125\1\u01f4\2\125"+
    "\3\u01f2\1\125\4\u01f2\15\125\1\0\2\u01e2\10\0\2\u01e2"+
    "\3\0\1\u01e3\1\67\1\0\3\u01e2\1\0\4\u01e2\15\0"+
    "\1\75\2\u01f5\10\75\2\u01f5\3\75\1\u01f6\1\136\1\112"+
    "\3\u01f5\1\75\4\u01f5\10\75\1\77\5\75\2\u01f5\10\75"+
    "\2\u01f5\3\75\1\u01f6\1\75\1\112\3\u01f5\1\75\4\u01f5"+
    "\15\75\1\0\2\u01f7\10\0\2\u01f7\3\0\1\u01f8\1\121"+
    "\1\0\3\u01f7\1\0\4\u01f7\10\0\1\64\5\0\2\u01f7"+
    "\10\0\2\u01f7\3\0\1\u01f8\2\0\3\u01f7\1\0\4\u01f7"+
    "\15\0\1\125\2\u01f9\10\125\2\u01f9\3\125\1\u01fa\1\165"+
    "\1\125\3\u01f9\1\125\4\u01f9\10\125\1\131\5\125\2\u01f9"+
    "\10\125\2\u01f9\3\125\1\u01fb\2\125\3\u01f9\1\125\4\u01f9"+
    "\15\125\1\0\2\u01e9\10\0\2\u01e9\3\0\1\u01ea\1\67"+
    "\1\0\3\u01e9\1\0\4\u01e9\15\0\1\75\2\u01fc\10\75"+
    "\2\u01fc\3\75\1\u01fd\1\136\1\112\3\u01fc\1\75\4\u01fc"+
    "\10\75\1\77\5\75\2\u01fc\10\75\2\u01fc\3\75\1\u01fd"+
    "\1\75\1\112\3\u01fc\1\75\4\u01fc\15\75\1\0\2\u01fe"+
    "\10\0\2\u01fe\3\0\1\u01ff\1\121\1\0\3\u01fe\1\0"+
    "\4\u01fe\10\0\1\64\5\0\2\u01fe\10\0\2\u01fe\3\0"+
    "\1\u01ff\2\0\3\u01fe\1\0\4\u01fe\15\0\1\125\2\u0200"+
    "\10\125\2\u0200\3\125\1\u0201\1\165\1\125\3\u0200\1\125"+
    "\4\u0200\10\125\1\131\5\125\2\u0200\10\125\2\u0200\3\125"+
    "\1\u0202\2\125\3\u0200\1\125\4\u0200\15\125\1\0\2\u01f0"+
    "\10\0\2\u01f0\3\0\1\u01f1\1\67\1\0\3\u01f0\1\0"+
    "\4\u01f0\15\0\1\75\2\u0203\10\75\2\u0203\3\75\1\u0204"+
    "\1\136\1\112\3\u0203\1\75\4\u0203\10\75\1\77\5\75"+
    "\2\u0203\10\75\2\u0203\3\75\1\u0204\1\75\1\112\3\u0203"+
    "\1\75\4\u0203\15\75\1\0\2\u0205\10\0\2\u0205\3\0"+
    "\1\u0206\1\121\1\0\3\u0205\1\0\4\u0205\10\0\1\64"+
    "\5\0\2\u0205\10\0\2\u0205\3\0\1\u0206\2\0\3\u0205"+
    "\1\0\4\u0205\15\0\1\125\2\u0207\10\125\2\u0207\3\125"+
    "\1\u0208\1\165\1\125\3\u0207\1\125\4\u0207\10\125\1\131"+
    "\5\125\2\u0207\10\125\2\u0207\3\125\1\u0209\2\125\3\u0207"+
    "\1\125\4\u0207\15\125\1\0\2\u01f7\10\0\2\u01f7\3\0"+
    "\1\u01f8\1\67\1\0\3\u01f7\1\0\4\u01f7\15\0\1\75"+
    "\2\u020a\10\75\2\u020a\3\75\1\u020b\1\136\1\112\3\u020a"+
    "\1\75\4\u020a\10\75\1\77\5\75\2\u020a\10\75\2\u020a"+
    "\3\75\1\u020b\1\75\1\112\3\u020a\1\75\4\u020a\15\75"+
    "\1\0\2\u020c\10\0\2\u020c\3\0\1\u020d\1\121\1\0"+
    "\3\u020c\1\0\4\u020c\10\0\1\64\5\0\2\u020c\10\0"+
    "\2\u020c\3\0\1\u020d\2\0\3\u020c\1\0\4\u020c\15\0"+
    "\1\125\2\u020e\10\125\2\u020e\3\125\1\u020f\1\165\1\125"+
    "\3\u020e\1\125\4\u020e\10\125\1\131\5\125\2\u020e\10\125"+
    "\2\u020e\3\125\1\u0210\2\125\3\u020e\1\125\4\u020e\15\125"+
    "\1\0\2\u01fe\10\0\2\u01fe\3\0\1\u01ff\1\67\1\0"+
    "\3\u01fe\1\0\4\u01fe\15\0\1\75\2\u0211\10\75\2\u0211"+
    "\3\75\1\u0212\1\136\1\112\3\u0211\1\75\4\u0211\10\75"+
    "\1\77\5\75\2\u0211\10\75\2\u0211\3\75\1\u0212\1\75"+
    "\1\112\3\u0211\1\75\4\u0211\15\75\1\0\2\u0213\10\0"+
    "\2\u0213\3\0\1\u0214\1\121\1\0\3\u0213\1\0\4\u0213"+
    "\10\0\1\64\5\0\2\u0213\10\0\2\u0213\3\0\1\u0214"+
    "\2\0\3\u0213\1\0\4\u0213\15\0\1\125\2\u0215\10\125"+
    "\2\u0215\3\125\1\u0216\1\165\1\125\3\u0215\1\125\4\u0215"+
    "\10\125\1\131\5\125\2\u0215\10\125\2\u0215\3\125\1\u0217"+
    "\2\125\3\u0215\1\125\4\u0215\15\125\1\0\2\u0205\10\0"+
    "\2\u0205\3\0\1\u0206\1\67\1\0\3\u0205\1\0\4\u0205"+
    "\15\0\1\75\2\u0218\10\75\2\u0218\3\75\1\u0219\1\136"+
    "\1\112\3\u0218\1\75\4\u0218\10\75\1\77\5\75\2\u0218"+
    "\10\75\2\u0218\3\75\1\u0219\1\75\1\112\3\u0218\1\75"+
    "\4\u0218\15\75\1\0\2\u021a\10\0\2\u021a\3\0\1\u021b"+
    "\1\121\1\0\3\u021a\1\0\4\u021a\10\0\1\64\5\0"+
    "\2\u021a\10\0\2\u021a\3\0\1\u021b\2\0\3\u021a\1\0"+
    "\4\u021a\15\0\1\125\2\u021c\10\125\2\u021c\3\125\1\u021d"+
    "\1\165\1\125\3\u021c\1\125\4\u021c\10\125\1\131\5\125"+
    "\2\u021c\10\125\2\u021c\3\125\1\u021e\2\125\3\u021c\1\125"+
    "\4\u021c\15\125\1\0\2\u020c\10\0\2\u020c\3\0\1\u020d"+
    "\1\67\1\0\3\u020c\1\0\4\u020c\15\0\1\75\2\u021f"+
    "\10\75\2\u021f\3\75\1\u0220\1\136\1\112\3\u021f\1\75"+
    "\4\u021f\10\75\1\77\5\75\2\u021f\10\75\2\u021f\3\75"+
    "\1\u0220\1\75\1\112\3\u021f\1\75\4\u021f\15\75\1\0"+
    "\2\u0221\10\0\2\u0221\3\0\1\u0222\1\121\1\0\3\u0221"+
    "\1\0\4\u0221\10\0\1\64\5\0\2\u0221\10\0\2\u0221"+
    "\3\0\1\u0222\2\0\3\u0221\1\0\4\u0221\15\0\1\125"+
    "\2\u0223\10\125\2\u0223\3\125\1\u0224\1\165\1\125\3\u0223"+
    "\1\125\4\u0223\10\125\1\131\5\125\2\u0223\10\125\2\u0223"+
    "\3\125\1\u0225\2\125\3\u0223\1\125\4\u0223\15\125\1\0"+
    "\2\u0213\10\0\2\u0213\3\0\1\u0214\1\67\1\0\3\u0213"+
    "\1\0\4\u0213\15\0\1\75\2\u0226\10\75\2\u0226\3\75"+
    "\1\u0227\1\136\1\112\3\u0226\1\75\4\u0226\10\75\1\77"+
    "\5\75\2\u0226\10\75\2\u0226\3\75\1\u0227\1\75\1\112"+
    "\3\u0226\1\75\4\u0226\15\75\1\0\2\u0228\10\0\2\u0228"+
    "\3\0\1\u0229\1\121\1\0\3\u0228\1\0\4\u0228\10\0"+
    "\1\64\5\0\2\u0228\10\0\2\u0228\3\0\1\u0229\2\0"+
    "\3\u0228\1\0\4\u0228\15\0\1\125\2\u022a\10\125\2\u022a"+
    "\3\125\1\u022b\1\165\1\125\3\u022a\1\125\4\u022a\10\125"+
    "\1\131\5\125\2\u022a\10\125\2\u022a\3\125\1\u022c\2\125"+
    "\3\u022a\1\125\4\u022a\15\125\1\0\2\u021a\10\0\2\u021a"+
    "\3\0\1\u021b\1\67\1\0\3\u021a\1\0\4\u021a\15\0"+
    "\1\75\2\u022d\10\75\2\u022d\3\75\1\u022e\1\136\1\112"+
    "\3\u022d\1\75\4\u022d\10\75\1\77\5\75\2\u022d\10\75"+
    "\2\u022d\3\75\1\u022e\1\75\1\112\3\u022d\1\75\4\u022d"+
    "\15\75\1\0\2\u022f\10\0\2\u022f\3\0\1\u0230\1\121"+
    "\1\0\3\u022f\1\0\4\u022f\10\0\1\64\5\0\2\u022f"+
    "\10\0\2\u022f\3\0\1\u0230\2\0\3\u022f\1\0\4\u022f"+
    "\15\0\1\125\2\u0231\10\125\2\u0231\3\125\1\u0232\1\165"+
    "\1\125\3\u0231\1\125\4\u0231\10\125\1\131\5\125\2\u0231"+
    "\10\125\2\u0231\3\125\1\u0233\2\125\3\u0231\1\125\4\u0231"+
    "\15\125\1\0\2\u0221\10\0\2\u0221\3\0\1\u0222\1\67"+
    "\1\0\3\u0221\1\0\4\u0221\15\0\1\75\2\u0234\10\75"+
    "\2\u0234\3\75\1\u0235\1\136\1\112\3\u0234\1\75\4\u0234"+
    "\10\75\1\77\5\75\2\u0234\10\75\2\u0234\3\75\1\u0235"+
    "\1\75\1\112\3\u0234\1\75\4\u0234\15\75\1\0\2\u0236"+
    "\10\0\2\u0236\4\0\1\121\1\0\3\u0236\1\0\4\u0236"+
    "\10\0\1\64\5\0\2\u0236\10\0\2\u0236\6\0\3\u0236"+
    "\1\0\4\u0236\15\0\1\125\2\u0237\10\125\2\u0237\3\125"+
    "\1\u0238\1\165\1\125\3\u0237\1\125\4\u0237\10\125\1\131"+
    "\5\125\2\u0237\10\125\2\u0237\3\125\1\u0239\2\125\3\u0237"+
    "\1\125\4\u0237\15\125\1\0\2\u0228\10\0\2\u0228\3\0"+
    "\1\u0229\1\67\1\0\3\u0228\1\0\4\u0228\15\0\1\75"+
    "\2\u023a\10\75\2\u023a\4\75\1\136\1\112\3\u023a\1\75"+
    "\4\u023a\10\75\1\77\5\75\2\u023a\10\75\2\u023a\5\75"+
    "\1\112\3\u023a\1\75\4\u023a\15\75\21\0\1\121\21\0"+
    "\1\64\4\0\1\125\2\u023b\10\125\2\u023b\3\125\1\u023c"+
    "\1\165\1\125\3\u023b\1\125\4\u023b\10\125\1\131\5\125"+
    "\2\u023b\10\125\2\u023b\3\125\1\u023d\2\125\3\u023b\1\125"+
    "\4\u023b\15\125\1\0\2\u022f\10\0\2\u022f\3\0\1\u0230"+
    "\1\67\1\0\3\u022f\1\0\4\u022f\15\0\21\75\1\136"+
    "\1\112\20\75\1\77\4\75\1\125\2\u023e\10\125\2\u023e"+
    "\3\125\1\146\1\165\1\125\3\u023e\1\125\4\u023e\10\125"+
    "\1\131\5\125\2\u023e\10\125\2\u023e\3\125\1\105\2\125"+
    "\3\u023e\1\125\4\u023e\15\125\1\0\2\u0236\10\0\2\u0236"+
    "\4\0\1\67\1\0\3\u0236\1\0\4\u0236\15\0\20\125"+
    "\1\146\1\165\21\125\1\131\4\125";

  private static int [] zzUnpackTrans() {
    int [] result = new int[21880];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  private static final char[] EMPTY_BUFFER = new char[0];
  private static final int YYEOF = -1;
  private static java.io.Reader zzReader = null; // Fake

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\5\0\1\11\2\1\1\11\3\1\1\11\3\1\1\11"+
    "\3\1\3\11\1\1\1\11\3\1\2\0\1\11\4\1"+
    "\2\0\1\11\1\1\10\0\1\1\1\11\5\0\1\11"+
    "\31\0\1\11\2\0\1\11\3\0\1\1\5\0\1\1"+
    "\26\0\1\1\24\0\1\1\2\0\1\1\76\0\1\1"+
    "\u0172\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[574];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */
  private static class Token implements MarkdownTokenTypes {}

  private Stack<Integer> stateStack = new Stack<Integer>();

  private boolean isHeader = false;

  private ParseDelimited parseDelimited = new ParseDelimited();

  private static class ParseDelimited {
    char exitChar = 0;
    IElementType returnType = null;
    boolean inlinesAllowed = true;
  }

  private static class LinkDef {
    boolean wasUrl;
    boolean wasParen;
  }

  private static class HtmlHelper {
    private static final String BLOCK_TAGS_STRING =
            "article, header, aside, hgroup, blockquote, hr, iframe, body, li, map, button, " +
            "object, canvas, ol, caption, output, col, p, colgroup, pre, dd, progress, div, " +
            "section, dl, table, td, dt, tbody, embed, textarea, fieldset, tfoot, figcaption, " +
            "th, figure, thead, footer, footer, tr, form, ul, h1, h2, h3, h4, h5, h6, video, " +
            "script, style";

    static final Set<String> BLOCK_TAGS = getBlockTagsSet();

    private static Set<String> getBlockTagsSet() {
      Set<String> result = new HashSet<String>();
      String[] tags = BLOCK_TAGS_STRING.split(", ");
      for (String tag : tags) {
        result.add(tag);
      }
      return result;
    }
  }

  private static IElementType getDelimiterTokenType(char c) {
    switch (c) {
      case '"': return Token.DOUBLE_QUOTE;
      case '\'': return Token.SINGLE_QUOTE;
      case '(': return Token.LPAREN;
      case ')': return Token.RPAREN;
      case '[': return Token.LBRACKET;
      case ']': return Token.RBRACKET;
      case '<': return Token.LT;
      case '>': return Token.GT;
      default: return Token.BAD_CHARACTER;
    }
  }

  private IElementType parseDelimited(IElementType contentsType, boolean allowInlines) {
    char first = yycharat(0);
    char last = yycharat(yylength() - 1);

    stateStack.push(yystate());

    parseDelimited.exitChar = last;
    parseDelimited.returnType = contentsType;
//    parseDelimited.inlinesAllowed = allowInlines;
    parseDelimited.inlinesAllowed = true;

    yybegin(PARSE_DELIMITED);

    yypushback(yylength() - 1);
    return getDelimiterTokenType(first);
  }

  private void processEol() {
    int newlinePos = 1;
    while (newlinePos < yylength() && yycharat(newlinePos) != '\n') {
      newlinePos++;
    }

    // there is always one at 0 so that means there are two at least
    if (newlinePos != yylength()) {
      yypushback(yylength() - newlinePos);
      return;
    }

    yybegin(YYINITIAL);
    yypushback(yylength() - 1);

    isHeader = false;
  }

  private void popState() {
    if (stateStack.isEmpty()) {
      yybegin(AFTER_LINE_START);
    }
    else {
      yybegin(stateStack.pop());
    }
  }

  private void resetState() {
    yypushback(yylength());

    popState();
  }

  private String getTagName() {
    if (yylength() > 1 && yycharat(1) == '/') {
      return yytext().toString().substring(2, yylength() - 1).trim();
    }
    return yytext().toString().substring(1);
  }

  private boolean isBlockTag(String tagName) {
    return HtmlHelper.BLOCK_TAGS.contains(tagName.toLowerCase());
  }

  private boolean canInline() {
    return yystate() == AFTER_LINE_START || yystate() == PARSE_DELIMITED && parseDelimited.inlinesAllowed;
  }

  private IElementType getReturnGeneralized(IElementType defaultType) {
    if (canInline()) {
      return defaultType;
    }
    return parseDelimited.returnType;
  }

  private int countChars(CharSequence s, char c) {
    int result = 0;
    for (int i = 0; i < s.length(); ++i) {
      if (s.charAt(i) == c)
        result++;
    }
    return result;
  }



  public _MarkdownLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public _MarkdownLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 108) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = buffer;
    zzBufferArray = null;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBufferArray != null ? zzBufferArray[zzStartRead+pos]:zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL)
            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 19: 
          { return parseDelimited(Token.AUTOLINK, false);
          }
        case 20: break;
        case 3: 
          { return Token.HTML_BLOCK;
          }
        case 21: break;
        case 9: 
          { return Token.COLON;
          }
        case 22: break;
        case 18: 
          { return parseDelimited(Token.EMAIL_AUTOLINK, false);
          }
        case 23: break;
        case 2: 
          { return Token.BLOCK_QUOTE;
          }
        case 24: break;
        case 16: 
          { return Token.HTML_ENTITY;
          }
        case 25: break;
        case 11: 
          { if (canInline()) {
      return Token.BACKTICK;
    }
    return parseDelimited.returnType;
          }
        case 26: break;
        case 14: 
          { return getReturnGeneralized(Token.TEXT);
          }
        case 27: break;
        case 15: 
          { return getReturnGeneralized(Token.ESCAPED_BACKTICKS);
          }
        case 28: break;
        case 13: 
          { yybegin(YYINITIAL);
    yypushback(yylength());
          }
        case 29: break;
        case 12: 
          { if (yycharat(0) == parseDelimited.exitChar) {
      yybegin(stateStack.pop());
      return getDelimiterTokenType(yycharat(0));
    }
    return parseDelimited.returnType;
          }
        case 30: break;
        case 10: 
          { return getReturnGeneralized(Token.EMPH);
          }
        case 31: break;
        case 17: 
          { return Token.HTML_TAG;
          }
        case 32: break;
        case 4: 
          { return Token.TEXT;
          }
        case 33: break;
        case 5: 
          { return Token.WHITE_SPACE;
          }
        case 34: break;
        case 7: 
          { return getDelimiterTokenType(yycharat(0));
          }
        case 35: break;
        case 1: 
          { resetState();
          }
        case 36: break;
        case 8: 
          { return Token.EXCLAMATION_MARK;
          }
        case 37: break;
        case 6: 
          { int lastSpaces = yytext().toString().indexOf("\n");
    if (lastSpaces >= 2) {
      yypushback(yylength() - lastSpaces);
      return Token.HARD_LINE_BREAK;
    }
    else if (lastSpaces > 0) {
      yypushback(yylength() - lastSpaces);
      return Token.WHITE_SPACE;
    }

    processEol();
    return Token.EOL;
          }
        case 38: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
