/* The following code was generated by JFlex 1.4.3 on 8/11/15 1:13 PM */

package org.intellij.markdown.lexer;

import org.intellij.markdown.IElementType;
import org.intellij.markdown.MarkdownTokenTypes;

import java.util.HashSet;
import java.util.Set;
import java.util.Stack;

/* Auto generated File */

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 8/11/15 1:13 PM from the specification file
 * <tt>/Users/valich/work/intellij-markdown/src/org/intellij/markdown/lexer/markdown.flex</tt>
 */
public class _MarkdownLexer {
  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int CODE = 10;
  public static final int AFTER_LINE_START = 6;
  public static final int TAG_START = 4;
  public static final int HTML_BLOCK = 2;
  public static final int YYINITIAL = 0;
  public static final int PARSE_DELIMITED = 8;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  2, 2
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\4\1\0\1\3\1\5\22\0\1\3\1\17\1\6"+
    "\1\12\2\45\1\11\1\10\1\47\1\47\1\46\1\45\1\44\1\20"+
    "\1\43\1\40\12\1\1\34\1\15\1\16\1\37\1\21\1\22\1\42"+
    "\1\31\1\25\1\27\1\30\2\25\15\23\1\32\3\23\1\24\2\23"+
    "\1\26\1\7\1\33\1\41\1\35\1\36\6\14\21\2\1\13\2\2"+
    "\1\45\1\41\2\45\uff81\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\5\0\3\1\1\2\3\3\1\4\2\5\1\6\1\7"+
    "\2\10\1\5\1\10\1\11\1\12\1\13\1\14\4\15"+
    "\2\0\2\16\1\3\2\16\2\0\1\17\1\20\10\0"+
    "\1\17\1\21\5\0\1\22\31\0\1\23\2\0\1\24"+
    "\3\0\1\22\5\0\1\23\26\0\1\23\24\0\1\22"+
    "\2\0\1\22\76\0\1\22\u0172\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[575];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\50\0\120\0\170\0\240\0\310\0\360\0\u0118"+
    "\0\310\0\u0140\0\u0168\0\u0190\0\310\0\310\0\u01b8\0\u01e0"+
    "\0\u0208\0\310\0\u0230\0\u0258\0\u0280\0\310\0\310\0\310"+
    "\0\u02a8\0\310\0\u02d0\0\u0230\0\u0280\0\360\0\u0168\0\310"+
    "\0\u02f8\0\u0320\0\u0168\0\u0348\0\u01b8\0\u0370\0\310\0\u0398"+
    "\0\u03c0\0\u03e8\0\u0410\0\u0438\0\u0460\0\u0488\0\u04b0\0\u02d0"+
    "\0\u0370\0\310\0\u04d8\0\u0500\0\u0528\0\u0550\0\u0578\0\310"+
    "\0\u05a0\0\u05c8\0\u05f0\0\u0618\0\u0640\0\u0668\0\u0690\0\u06b8"+
    "\0\u06e0\0\u0708\0\u0730\0\u0758\0\u0780\0\u07a8\0\u07d0\0\u07f8"+
    "\0\u0820\0\u0848\0\u0870\0\u0898\0\u08c0\0\u08e8\0\u0910\0\u0938"+
    "\0\u0960\0\310\0\u0988\0\u09b0\0\310\0\u09d8\0\u0a00\0\u0a28"+
    "\0\u09d8\0\u0a50\0\u0a78\0\u0aa0\0\u0ac8\0\u0af0\0\u0668\0\u0b18"+
    "\0\u0b40\0\u0b68\0\u0b90\0\u0bb8\0\u0be0\0\u0c08\0\u0c30\0\u0c58"+
    "\0\u0c80\0\u0ca8\0\u0cd0\0\u0cf8\0\u0d20\0\u0d48\0\u0d70\0\u0d98"+
    "\0\u0dc0\0\u0de8\0\u0e10\0\u0e38\0\u0e60\0\u09d8\0\u0e88\0\u0eb0"+
    "\0\u0ed8\0\u0f00\0\u0f28\0\u0f50\0\u0f78\0\u0fa0\0\u0fc8\0\u0ff0"+
    "\0\u1018\0\u1040\0\u1068\0\u1090\0\u10b8\0\u10e0\0\u1108\0\u1130"+
    "\0\u1158\0\u1180\0\u0be0\0\u11a8\0\u11d0\0\u0c08\0\u11f8\0\u1220"+
    "\0\u1248\0\u1270\0\u1298\0\u12c0\0\u12e8\0\u1310\0\u1338\0\u1360"+
    "\0\u1388\0\u13b0\0\u13d8\0\u1400\0\u1428\0\u1450\0\u1478\0\u14a0"+
    "\0\u14c8\0\u14f0\0\u1518\0\u1540\0\u1568\0\u1590\0\u15b8\0\u15e0"+
    "\0\u1608\0\u1630\0\u1658\0\u1680\0\u16a8\0\u16d0\0\u16f8\0\u1720"+
    "\0\u1748\0\u1770\0\u1798\0\u17c0\0\u17e8\0\u1810\0\u1838\0\u1860"+
    "\0\u1888\0\u18b0\0\u18d8\0\u1900\0\u1928\0\u1950\0\u1978\0\u19a0"+
    "\0\u19c8\0\u19f0\0\u1a18\0\u1a40\0\u1a68\0\u1a90\0\u1ab8\0\u1ae0"+
    "\0\u1b08\0\u1b30\0\u1b58\0\u1b80\0\u1770\0\u1ba8\0\u1bd0\0\u1bf8"+
    "\0\u1c20\0\u1c48\0\u1c70\0\u1c98\0\u1cc0\0\u1ce8\0\u1d10\0\u1d38"+
    "\0\u1d60\0\u1d88\0\u1db0\0\u1dd8\0\u1e00\0\u1e28\0\u1e50\0\u1e78"+
    "\0\u1ea0\0\u1ec8\0\u1ef0\0\u1f18\0\u1f40\0\u1f68\0\u1f90\0\u1fb8"+
    "\0\u1fe0\0\u2008\0\u2030\0\u2058\0\u2080\0\u20a8\0\u20d0\0\u20f8"+
    "\0\u2120\0\u2148\0\u2170\0\u2198\0\u21c0\0\u21e8\0\u2210\0\u2238"+
    "\0\u2260\0\u2288\0\u22b0\0\u22d8\0\u2300\0\u2328\0\u2350\0\u2378"+
    "\0\u23a0\0\u23c8\0\u23f0\0\u2418\0\u2440\0\u2468\0\u2490\0\u24b8"+
    "\0\u24e0\0\u2508\0\u2530\0\u2558\0\u2580\0\u25a8\0\u25d0\0\u25f8"+
    "\0\u2620\0\u2648\0\u2670\0\u2698\0\u26c0\0\u26e8\0\u2710\0\u2738"+
    "\0\u2760\0\u2788\0\u27b0\0\u27d8\0\u2800\0\u2828\0\u2850\0\u2878"+
    "\0\u28a0\0\u28c8\0\u28f0\0\u2918\0\u2940\0\u2968\0\u2990\0\u29b8"+
    "\0\u29e0\0\u2a08\0\u2a30\0\u2a58\0\u2a80\0\u2aa8\0\u2ad0\0\u2af8"+
    "\0\u2b20\0\u2b48\0\u2b70\0\u2b98\0\u2bc0\0\u2be8\0\u2c10\0\u2c38"+
    "\0\u2c60\0\u2c88\0\u2cb0\0\u2cd8\0\u2d00\0\u2d28\0\u2d50\0\u2d78"+
    "\0\u2da0\0\u2dc8\0\u2df0\0\u2e18\0\u2e40\0\u2e68\0\u2e90\0\u2eb8"+
    "\0\u2ee0\0\u2f08\0\u2f30\0\u2f58\0\u2f80\0\u2fa8\0\u2fd0\0\u2ff8"+
    "\0\u3020\0\u3048\0\u3070\0\u3098\0\u30c0\0\u30e8\0\u3110\0\u3138"+
    "\0\u3160\0\u3188\0\u31b0\0\u31d8\0\u3200\0\u3228\0\u3250\0\u3278"+
    "\0\u32a0\0\u32c8\0\u32f0\0\u3318\0\u3340\0\u3368\0\u3390\0\u33b8"+
    "\0\u33e0\0\u3408\0\u3430\0\u3458\0\u3480\0\u34a8\0\u34d0\0\u34f8"+
    "\0\u3520\0\u3548\0\u3570\0\u3598\0\u35c0\0\u35e8\0\u3610\0\u3638"+
    "\0\u3660\0\u3688\0\u36b0\0\u36d8\0\u3700\0\u3728\0\u3750\0\u3778"+
    "\0\u37a0\0\u37c8\0\u37f0\0\u3818\0\u3840\0\u3868\0\u3890\0\u38b8"+
    "\0\u38e0\0\u3908\0\u3930\0\u3958\0\u3980\0\u39a8\0\u39d0\0\u39f8"+
    "\0\u3a20\0\u3a48\0\u3a70\0\u3a98\0\u3ac0\0\u3ae8\0\u3b10\0\u3b38"+
    "\0\u3b60\0\u3b88\0\u3bb0\0\u3bd8\0\u3c00\0\u3c28\0\u3c50\0\u3c78"+
    "\0\u3ca0\0\u3cc8\0\u3cf0\0\u3d18\0\u3d40\0\u3d68\0\u3d90\0\u3db8"+
    "\0\u3de0\0\u3e08\0\u3e30\0\u3e58\0\u3e80\0\u3ea8\0\u3ed0\0\u3ef8"+
    "\0\u3f20\0\u3f48\0\u3f70\0\u3f98\0\u3fc0\0\u3fe8\0\u4010\0\u4038"+
    "\0\u4060\0\u4088\0\u40b0\0\u40d8\0\u4100\0\u4128\0\u4150\0\u4178"+
    "\0\u41a0\0\u41c8\0\u41f0\0\u4218\0\u4240\0\u4268\0\u4290\0\u42b8"+
    "\0\u42e0\0\u4308\0\u4330\0\u4358\0\u4380\0\u43a8\0\u43d0\0\u43f8"+
    "\0\u4420\0\u4448\0\u4470\0\u4498\0\u44c0\0\u44e8\0\u4510\0\u4538"+
    "\0\u4560\0\u4588\0\u45b0\0\u45d8\0\u4600\0\u4628\0\u4650\0\u4678"+
    "\0\u46a0\0\u46c8\0\u46f0\0\u4718\0\u4740\0\u4768\0\u4790\0\u47b8"+
    "\0\u47e0\0\u4808\0\u4830\0\u4858\0\u4880\0\u48a8\0\u48d0\0\u48f8"+
    "\0\u4920\0\u4948\0\u4970\0\u4998\0\u49c0\0\u49e8\0\u4a10\0\u4a38"+
    "\0\u4a60\0\u4a88\0\u4ab0\0\u4ad8\0\u4b00\0\u4b28\0\u4b50\0\u4b78"+
    "\0\u4ba0\0\u4bc8\0\u4bf0\0\u4c18\0\u4c40\0\u4c68\0\u4c90\0\u4cb8"+
    "\0\u4ce0\0\u4d08\0\u4d30\0\u4d58\0\u4d80\0\u4da8\0\u4dd0\0\u4df8"+
    "\0\u4e20\0\u4e48\0\u4e70\0\u4e98\0\u4ec0\0\u4ee8\0\u4f10\0\u4f38"+
    "\0\u4f60\0\u4f88\0\u4fb0\0\u4fd8\0\u5000\0\u5028\0\u5050\0\u5078"+
    "\0\u50a0\0\u50c8\0\u50f0\0\u5118\0\u5140\0\u5168\0\u5190\0\u51b8"+
    "\0\u51e0\0\u5208\0\u5230\0\u5258\0\u5280\0\u52a8\0\u52d0\0\u52f8"+
    "\0\u5320\0\u5348\0\u5370\0\u5398\0\u53c0\0\u53e8\0\u5410\0\u5438"+
    "\0\u5460\0\u5488\0\u54b0\0\u54d8\0\u5500\0\u5528\0\u5550";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[575];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\3\6\1\7\1\6\1\10\13\6\1\11\26\6\4\12"+
    "\1\13\1\14\42\12\4\15\1\0\43\15\1\16\2\17"+
    "\1\20\2\21\1\22\1\23\1\22\1\24\1\16\2\17"+
    "\1\16\1\25\1\26\1\16\1\22\1\16\3\17\1\22"+
    "\4\17\1\22\1\27\1\30\1\31\7\16\1\30\1\22"+
    "\3\32\1\33\1\6\1\10\1\32\1\34\6\32\1\35"+
    "\16\32\1\30\1\31\7\32\1\30\1\32\53\0\1\36"+
    "\1\6\1\10\46\0\1\6\43\0\4\12\1\0\43\12"+
    "\3\0\1\37\1\40\1\41\42\0\3\12\1\42\1\43"+
    "\1\44\42\12\1\0\2\17\1\45\7\0\2\17\6\0"+
    "\3\17\1\0\4\17\20\0\1\20\2\21\27\0\1\46"+
    "\10\0\1\46\4\0\3\21\51\0\1\47\1\0\2\47"+
    "\3\0\4\47\4\0\1\47\4\0\3\47\1\50\1\0"+
    "\1\47\1\0\6\47\1\0\2\51\7\0\1\52\2\51"+
    "\6\0\3\51\1\0\4\51\16\0\1\53\1\54\5\0"+
    "\3\53\2\54\2\0\1\55\1\53\1\0\1\56\3\54"+
    "\1\0\4\54\2\0\3\53\1\57\1\53\1\0\1\53"+
    "\1\0\2\53\37\0\1\31\14\0\1\60\31\0\1\46"+
    "\10\0\1\46\5\0\1\40\43\0\3\12\1\42\1\40"+
    "\1\44\46\12\1\40\43\12\3\0\1\61\102\0\1\50"+
    "\12\0\2\51\10\0\2\51\1\62\5\0\3\51\1\0"+
    "\4\51\16\0\1\63\11\0\1\64\10\0\1\64\24\0"+
    "\2\53\5\0\5\53\2\0\2\53\1\0\4\53\1\0"+
    "\4\53\2\0\5\53\1\65\1\53\1\0\2\53\2\0"+
    "\1\66\1\54\1\67\4\0\3\53\2\54\2\0\2\53"+
    "\1\70\1\53\3\54\1\0\4\54\1\0\1\71\3\53"+
    "\1\72\1\53\1\65\1\53\1\0\2\53\2\0\2\53"+
    "\5\0\5\53\2\0\1\53\1\73\1\0\1\53\3\74"+
    "\1\75\4\74\2\0\5\53\1\65\1\53\1\0\2\53"+
    "\1\0\1\76\2\56\5\76\5\56\2\76\2\56\1\76"+
    "\1\77\3\56\1\76\4\56\2\76\5\56\1\100\1\56"+
    "\1\76\2\56\1\76\1\0\1\53\1\101\5\0\3\53"+
    "\2\101\2\0\2\53\1\0\1\53\3\101\1\0\4\101"+
    "\2\0\5\53\1\65\1\53\1\0\2\53\2\0\1\102"+
    "\13\0\1\62\33\0\1\103\12\0\1\103\10\0\1\103"+
    "\1\0\3\103\17\0\2\104\10\0\2\104\6\0\3\104"+
    "\1\0\4\104\16\0\2\66\1\67\4\0\3\53\2\66"+
    "\2\0\2\53\1\70\1\53\3\66\1\0\4\66\2\0"+
    "\3\53\1\72\1\53\1\65\1\53\1\0\2\53\3\0"+
    "\1\105\1\67\7\0\2\105\3\0\1\105\1\70\1\0"+
    "\3\105\1\0\4\105\1\0\1\105\3\0\1\106\7\0"+
    "\3\107\2\0\11\107\1\0\2\107\1\0\26\107\1\0"+
    "\2\53\5\0\5\53\2\0\2\53\1\70\4\53\1\0"+
    "\4\53\2\0\5\53\1\65\1\53\1\0\2\53\2\0"+
    "\2\53\5\0\5\53\2\0\1\53\1\110\1\0\4\53"+
    "\1\0\4\53\2\0\5\53\1\65\1\53\1\0\2\53"+
    "\2\0\2\53\1\111\4\0\5\53\2\0\2\53\1\0"+
    "\1\53\3\74\1\0\4\74\2\0\5\53\1\65\1\53"+
    "\1\0\2\53\30\0\1\112\20\0\22\76\1\113\26\76"+
    "\2\56\5\76\5\56\2\76\2\56\1\70\4\56\1\76"+
    "\4\56\2\76\5\56\1\100\1\56\1\76\2\56\2\76"+
    "\2\114\10\76\2\114\5\76\1\113\3\114\1\76\4\114"+
    "\15\76\1\0\2\101\1\115\4\0\3\53\2\101\2\0"+
    "\2\53\1\70\1\53\3\101\1\0\4\101\2\0\5\53"+
    "\1\65\1\53\1\0\2\53\2\0\1\116\13\0\1\62"+
    "\33\0\1\117\12\0\1\117\1\62\7\0\1\117\1\0"+
    "\3\117\17\0\2\120\10\0\2\120\3\0\1\121\1\122"+
    "\1\0\3\120\1\0\4\120\10\0\1\65\5\0\2\105"+
    "\1\123\7\0\2\105\3\0\1\105\1\70\1\0\3\105"+
    "\1\0\4\105\1\0\2\105\1\0\1\124\1\106\2\0"+
    "\1\105\25\0\1\70\26\0\3\107\2\0\11\107\1\0"+
    "\2\107\1\125\26\107\1\126\2\127\5\126\5\127\2\126"+
    "\1\127\1\130\1\131\4\127\1\126\4\127\2\126\5\127"+
    "\1\132\1\127\1\126\2\127\1\126\3\106\1\133\15\106"+
    "\1\0\26\106\30\0\1\134\17\0\21\76\1\70\27\76"+
    "\2\135\10\76\2\135\3\76\1\136\1\137\1\113\3\135"+
    "\1\76\4\135\10\76\1\100\4\76\3\0\1\115\15\0"+
    "\1\70\27\0\1\140\13\0\1\62\33\0\1\141\12\0"+
    "\1\141\1\62\7\0\1\141\1\0\3\141\17\0\2\142"+
    "\10\0\2\142\3\0\1\143\1\122\1\0\3\142\1\0"+
    "\4\142\10\0\1\65\5\0\2\142\10\0\2\142\3\0"+
    "\1\143\2\0\3\142\1\0\4\142\17\0\1\105\1\123"+
    "\7\0\2\105\3\0\1\105\1\70\1\0\3\105\1\0"+
    "\4\105\1\0\1\105\2\0\1\124\1\106\7\0\3\144"+
    "\1\124\2\0\1\145\1\144\1\146\5\144\1\0\2\144"+
    "\1\0\14\144\2\0\10\144\20\126\1\147\30\126\2\127"+
    "\5\126\5\127\2\126\1\127\1\150\1\126\4\127\1\126"+
    "\4\127\2\126\5\127\1\132\1\127\1\126\2\127\2\126"+
    "\2\127\5\126\5\127\2\126\1\127\1\72\1\131\4\127"+
    "\1\126\4\127\2\126\5\127\1\132\1\127\1\126\2\127"+
    "\2\126\2\151\10\126\2\151\3\126\1\147\2\126\3\151"+
    "\1\126\4\151\15\126\3\106\1\133\15\106\1\70\26\106"+
    "\31\0\1\152\16\0\1\76\2\153\10\76\2\153\3\76"+
    "\1\154\1\137\1\113\3\153\1\76\4\153\10\76\1\100"+
    "\5\76\2\153\10\76\2\153\3\76\1\154\1\76\1\113"+
    "\3\153\1\76\4\153\15\76\1\0\1\155\13\0\1\62"+
    "\33\0\1\156\12\0\1\156\1\62\7\0\1\156\1\0"+
    "\3\156\17\0\2\157\10\0\2\157\3\0\1\160\1\122"+
    "\1\0\3\157\1\0\4\157\10\0\1\65\5\0\2\157"+
    "\10\0\2\157\3\0\1\160\2\0\3\157\1\0\4\157"+
    "\15\0\3\144\1\67\3\0\1\144\1\0\5\144\1\0"+
    "\2\144\1\70\14\144\2\0\10\144\4\145\1\0\1\145"+
    "\1\161\1\162\40\145\4\146\1\0\2\146\1\163\1\161"+
    "\37\146\20\126\1\106\30\126\2\127\5\126\5\127\2\126"+
    "\1\127\1\72\1\126\4\127\1\126\4\127\2\126\5\127"+
    "\1\132\1\127\1\126\2\127\2\126\2\164\10\126\2\164"+
    "\3\126\1\165\1\166\1\126\3\164\1\126\4\164\10\126"+
    "\1\132\4\126\32\0\1\167\15\0\1\76\2\170\10\76"+
    "\2\170\3\76\1\171\1\137\1\113\3\170\1\76\4\170"+
    "\10\76\1\100\5\76\2\170\10\76\2\170\3\76\1\171"+
    "\1\76\1\113\3\170\1\76\4\170\15\76\1\0\1\172"+
    "\13\0\1\62\33\0\1\173\12\0\1\173\1\62\7\0"+
    "\1\173\1\0\3\173\17\0\2\174\10\0\2\174\3\0"+
    "\1\175\1\122\1\0\3\174\1\0\4\174\10\0\1\65"+
    "\5\0\2\174\10\0\2\174\3\0\1\175\2\0\3\174"+
    "\1\0\4\174\20\0\1\67\15\0\1\70\16\0\1\106"+
    "\7\0\4\145\1\0\1\145\1\176\1\162\40\145\4\146"+
    "\1\0\2\146\1\163\1\177\37\146\1\126\2\200\10\126"+
    "\2\200\3\126\1\201\1\166\1\126\3\200\1\126\4\200"+
    "\10\126\1\132\5\126\2\200\10\126\2\200\3\126\1\202"+
    "\2\126\3\200\1\126\4\200\15\126\31\0\1\203\16\0"+
    "\1\76\2\204\10\76\2\204\3\76\1\205\1\137\1\113"+
    "\3\204\1\76\4\204\10\76\1\100\5\76\2\204\10\76"+
    "\2\204\3\76\1\205\1\76\1\113\3\204\1\76\4\204"+
    "\15\76\1\0\1\206\13\0\1\62\33\0\1\207\12\0"+
    "\1\207\1\62\7\0\1\207\1\0\3\207\17\0\2\210"+
    "\10\0\2\210\3\0\1\211\1\122\1\0\3\210\1\0"+
    "\4\210\10\0\1\65\5\0\2\210\10\0\2\210\3\0"+
    "\1\211\2\0\3\210\1\0\4\210\15\0\3\145\1\212"+
    "\1\0\1\145\1\161\1\162\11\145\1\213\16\145\1\214"+
    "\7\145\3\146\1\215\1\0\2\146\1\163\1\161\10\146"+
    "\1\216\16\146\1\217\7\146\1\126\2\220\10\126\2\220"+
    "\3\126\1\221\1\166\1\126\3\220\1\126\4\220\10\126"+
    "\1\132\5\126\2\220\10\126\2\220\3\126\1\222\2\126"+
    "\3\220\1\126\4\220\15\126\1\0\2\157\10\0\2\157"+
    "\3\0\1\160\1\70\1\0\3\157\1\0\4\157\43\0"+
    "\1\223\21\0\1\76\2\224\10\76\2\224\3\76\1\225"+
    "\1\137\1\113\3\224\1\76\4\224\10\76\1\100\5\76"+
    "\2\224\10\76\2\224\3\76\1\225\1\76\1\113\3\224"+
    "\1\76\4\224\15\76\1\0\1\226\13\0\1\62\33\0"+
    "\1\227\12\0\1\227\1\62\7\0\1\227\1\0\3\227"+
    "\17\0\2\230\10\0\2\230\3\0\1\231\1\122\1\0"+
    "\3\230\1\0\4\230\10\0\1\65\5\0\2\230\10\0"+
    "\2\230\3\0\1\231\2\0\3\230\1\0\4\230\15\0"+
    "\2\145\1\232\1\212\1\0\1\145\1\161\1\162\3\145"+
    "\2\232\3\145\1\232\1\213\1\145\3\232\1\145\4\232"+
    "\1\145\1\232\3\145\1\214\13\145\1\0\1\145\1\161"+
    "\1\162\11\145\1\213\26\145\2\146\1\233\1\215\1\0"+
    "\2\146\1\163\1\161\2\146\2\233\3\146\1\233\1\216"+
    "\1\146\3\233\1\146\4\233\1\146\1\233\3\146\1\217"+
    "\13\146\1\0\2\146\1\163\1\161\10\146\1\216\26\146"+
    "\1\126\2\234\10\126\2\234\3\126\1\235\1\166\1\126"+
    "\3\234\1\126\4\234\10\126\1\132\5\126\2\234\10\126"+
    "\2\234\3\126\1\236\2\126\3\234\1\126\4\234\15\126"+
    "\1\0\2\174\10\0\2\174\3\0\1\175\1\70\1\0"+
    "\3\174\1\0\4\174\15\0\33\223\1\237\14\223\1\76"+
    "\2\240\10\76\2\240\3\76\1\241\1\137\1\113\3\240"+
    "\1\76\4\240\10\76\1\100\5\76\2\240\10\76\2\240"+
    "\3\76\1\241\1\76\1\113\3\240\1\76\4\240\15\76"+
    "\15\0\1\62\33\0\1\226\12\0\1\226\1\62\7\0"+
    "\1\226\1\0\3\226\17\0\2\242\10\0\2\242\3\0"+
    "\1\243\1\122\1\0\3\242\1\0\4\242\10\0\1\65"+
    "\5\0\2\242\10\0\2\242\3\0\1\243\2\0\3\242"+
    "\1\0\4\242\15\0\1\145\2\232\1\244\1\0\1\145"+
    "\1\161\1\162\3\145\2\232\3\145\1\232\1\213\1\145"+
    "\3\232\1\145\4\232\1\145\2\232\1\145\1\245\1\214"+
    "\2\145\1\232\4\145\1\146\2\233\1\246\1\0\2\146"+
    "\1\163\1\161\2\146\2\233\3\146\1\233\1\216\1\146"+
    "\3\233\1\146\4\233\1\146\2\233\1\146\1\247\1\217"+
    "\2\146\1\233\4\146\1\126\2\250\10\126\2\250\3\126"+
    "\1\251\1\166\1\126\3\250\1\126\4\250\10\126\1\132"+
    "\5\126\2\250\10\126\2\250\3\126\1\252\2\126\3\250"+
    "\1\126\4\250\15\126\1\0\2\210\10\0\2\210\3\0"+
    "\1\211\1\70\1\0\3\210\1\0\4\210\15\0\33\223"+
    "\1\253\14\223\1\76\2\254\10\76\2\254\3\76\1\255"+
    "\1\137\1\113\3\254\1\76\4\254\10\76\1\100\5\76"+
    "\2\254\10\76\2\254\3\76\1\255\1\76\1\113\3\254"+
    "\1\76\4\254\15\76\1\0\2\256\10\0\2\256\3\0"+
    "\1\257\1\122\1\0\3\256\1\0\4\256\10\0\1\65"+
    "\5\0\2\256\10\0\2\256\3\0\1\257\2\0\3\256"+
    "\1\0\4\256\15\0\2\145\1\232\1\244\1\0\1\145"+
    "\1\161\1\162\3\145\2\232\3\145\1\232\1\213\1\145"+
    "\3\232\1\145\4\232\1\145\1\232\2\145\1\245\1\214"+
    "\7\145\3\260\1\245\1\0\1\145\1\176\1\261\1\262"+
    "\5\260\1\145\2\260\1\145\14\260\2\145\10\260\2\146"+
    "\1\233\1\246\1\0\2\146\1\163\1\161\2\146\2\233"+
    "\3\146\1\233\1\216\1\146\3\233\1\146\4\233\1\146"+
    "\1\233\2\146\1\247\1\217\7\146\3\263\1\247\1\0"+
    "\1\146\1\262\1\264\1\177\5\263\1\146\2\263\1\146"+
    "\14\263\2\146\10\263\1\126\2\265\10\126\2\265\3\126"+
    "\1\266\1\166\1\126\3\265\1\126\4\265\10\126\1\132"+
    "\5\126\2\265\10\126\2\265\3\126\1\267\2\126\3\265"+
    "\1\126\4\265\15\126\1\0\2\230\10\0\2\230\3\0"+
    "\1\231\1\70\1\0\3\230\1\0\4\230\15\0\21\223"+
    "\1\70\26\223\1\76\2\270\10\76\2\270\3\76\1\271"+
    "\1\137\1\113\3\270\1\76\4\270\10\76\1\100\5\76"+
    "\2\270\10\76\2\270\3\76\1\271\1\76\1\113\3\270"+
    "\1\76\4\270\15\76\1\0\2\272\10\0\2\272\3\0"+
    "\1\273\1\122\1\0\3\272\1\0\4\272\10\0\1\65"+
    "\5\0\2\272\10\0\2\272\3\0\1\273\2\0\3\272"+
    "\1\0\4\272\15\0\3\260\1\212\1\0\1\145\1\161"+
    "\1\261\1\145\5\260\1\145\2\260\1\213\14\260\2\145"+
    "\13\260\1\212\1\0\1\145\1\176\1\261\1\145\5\260"+
    "\1\145\2\260\1\213\14\260\2\145\10\260\4\262\1\0"+
    "\1\262\1\177\1\274\1\176\37\262\3\263\1\215\1\0"+
    "\2\146\1\264\1\161\5\263\1\146\2\263\1\216\14\263"+
    "\2\146\13\263\1\215\1\0\2\146\1\264\1\177\5\263"+
    "\1\146\2\263\1\216\14\263\2\146\10\263\1\126\2\275"+
    "\10\126\2\275\3\126\1\276\1\166\1\126\3\275\1\126"+
    "\4\275\10\126\1\132\5\126\2\275\10\126\2\275\3\126"+
    "\1\277\2\126\3\275\1\126\4\275\15\126\1\0\2\242"+
    "\10\0\2\242\3\0\1\243\1\70\1\0\3\242\1\0"+
    "\4\242\15\0\1\76\2\300\10\76\2\300\3\76\1\301"+
    "\1\137\1\113\3\300\1\76\4\300\10\76\1\100\5\76"+
    "\2\300\10\76\2\300\3\76\1\301\1\76\1\113\3\300"+
    "\1\76\4\300\15\76\1\0\2\302\10\0\2\302\3\0"+
    "\1\303\1\122\1\0\3\302\1\0\4\302\10\0\1\65"+
    "\5\0\2\302\10\0\2\302\3\0\1\303\2\0\3\302"+
    "\1\0\4\302\15\0\4\262\1\0\1\262\1\304\1\274"+
    "\1\304\37\262\1\126\2\305\10\126\2\305\3\126\1\306"+
    "\1\166\1\126\3\305\1\126\4\305\10\126\1\132\5\126"+
    "\2\305\10\126\2\305\3\126\1\307\2\126\3\305\1\126"+
    "\4\305\15\126\1\0\2\256\10\0\2\256\3\0\1\257"+
    "\1\70\1\0\3\256\1\0\4\256\15\0\1\76\2\310"+
    "\10\76\2\310\3\76\1\311\1\137\1\113\3\310\1\76"+
    "\4\310\10\76\1\100\5\76\2\310\10\76\2\310\3\76"+
    "\1\311\1\76\1\113\3\310\1\76\4\310\15\76\1\0"+
    "\2\312\10\0\2\312\3\0\1\313\1\122\1\0\3\312"+
    "\1\0\4\312\10\0\1\65\5\0\2\312\10\0\2\312"+
    "\3\0\1\313\2\0\3\312\1\0\4\312\15\0\3\262"+
    "\1\314\1\0\1\262\1\177\1\274\1\176\10\262\1\315"+
    "\16\262\1\316\7\262\1\126\2\317\10\126\2\317\3\126"+
    "\1\320\1\166\1\126\3\317\1\126\4\317\10\126\1\132"+
    "\5\126\2\317\10\126\2\317\3\126\1\321\2\126\3\317"+
    "\1\126\4\317\15\126\1\0\2\272\10\0\2\272\3\0"+
    "\1\273\1\70\1\0\3\272\1\0\4\272\15\0\1\76"+
    "\2\322\10\76\2\322\3\76\1\323\1\137\1\113\3\322"+
    "\1\76\4\322\10\76\1\100\5\76\2\322\10\76\2\322"+
    "\3\76\1\323\1\76\1\113\3\322\1\76\4\322\15\76"+
    "\1\0\2\324\10\0\2\324\3\0\1\325\1\122\1\0"+
    "\3\324\1\0\4\324\10\0\1\65\5\0\2\324\10\0"+
    "\2\324\3\0\1\325\2\0\3\324\1\0\4\324\15\0"+
    "\2\262\1\326\1\314\1\0\1\262\1\177\1\274\1\176"+
    "\2\262\2\326\3\262\1\326\1\315\1\262\3\326\1\262"+
    "\4\326\1\262\1\326\3\262\1\316\13\262\1\0\1\262"+
    "\1\177\1\274\1\176\10\262\1\315\26\262\1\126\2\327"+
    "\10\126\2\327\3\126\1\330\1\166\1\126\3\327\1\126"+
    "\4\327\10\126\1\132\5\126\2\327\10\126\2\327\3\126"+
    "\1\331\2\126\3\327\1\126\4\327\15\126\1\0\2\302"+
    "\10\0\2\302\3\0\1\303\1\70\1\0\3\302\1\0"+
    "\4\302\15\0\1\76\2\332\10\76\2\332\3\76\1\333"+
    "\1\137\1\113\3\332\1\76\4\332\10\76\1\100\5\76"+
    "\2\332\10\76\2\332\3\76\1\333\1\76\1\113\3\332"+
    "\1\76\4\332\15\76\1\0\2\334\10\0\2\334\3\0"+
    "\1\335\1\122\1\0\3\334\1\0\4\334\10\0\1\65"+
    "\5\0\2\334\10\0\2\334\3\0\1\335\2\0\3\334"+
    "\1\0\4\334\15\0\1\262\2\326\1\336\1\0\1\262"+
    "\1\177\1\274\1\176\2\262\2\326\3\262\1\326\1\315"+
    "\1\262\3\326\1\262\4\326\1\262\2\326\1\262\1\337"+
    "\1\316\2\262\1\326\4\262\1\126\2\340\10\126\2\340"+
    "\3\126\1\341\1\166\1\126\3\340\1\126\4\340\10\126"+
    "\1\132\5\126\2\340\10\126\2\340\3\126\1\342\2\126"+
    "\3\340\1\126\4\340\15\126\1\0\2\312\10\0\2\312"+
    "\3\0\1\313\1\70\1\0\3\312\1\0\4\312\15\0"+
    "\1\76\2\343\10\76\2\343\3\76\1\344\1\137\1\113"+
    "\3\343\1\76\4\343\10\76\1\100\5\76\2\343\10\76"+
    "\2\343\3\76\1\344\1\76\1\113\3\343\1\76\4\343"+
    "\15\76\1\0\2\345\10\0\2\345\3\0\1\346\1\122"+
    "\1\0\3\345\1\0\4\345\10\0\1\65\5\0\2\345"+
    "\10\0\2\345\3\0\1\346\2\0\3\345\1\0\4\345"+
    "\15\0\2\262\1\326\1\336\1\0\1\262\1\177\1\274"+
    "\1\176\2\262\2\326\3\262\1\326\1\315\1\262\3\326"+
    "\1\262\4\326\1\262\1\326\2\262\1\337\1\316\7\262"+
    "\3\347\1\337\1\0\1\262\1\304\1\350\1\304\5\347"+
    "\1\262\2\347\1\262\14\347\2\262\10\347\1\126\2\351"+
    "\10\126\2\351\3\126\1\352\1\166\1\126\3\351\1\126"+
    "\4\351\10\126\1\132\5\126\2\351\10\126\2\351\3\126"+
    "\1\353\2\126\3\351\1\126\4\351\15\126\1\0\2\324"+
    "\10\0\2\324\3\0\1\325\1\70\1\0\3\324\1\0"+
    "\4\324\15\0\1\76\2\354\10\76\2\354\3\76\1\355"+
    "\1\137\1\113\3\354\1\76\4\354\10\76\1\100\5\76"+
    "\2\354\10\76\2\354\3\76\1\355\1\76\1\113\3\354"+
    "\1\76\4\354\15\76\1\0\2\356\10\0\2\356\3\0"+
    "\1\357\1\122\1\0\3\356\1\0\4\356\10\0\1\65"+
    "\5\0\2\356\10\0\2\356\3\0\1\357\2\0\3\356"+
    "\1\0\4\356\15\0\3\347\1\314\1\0\1\262\1\177"+
    "\1\350\1\176\5\347\1\262\2\347\1\315\14\347\2\262"+
    "\13\347\1\314\1\0\1\262\1\304\1\350\1\304\5\347"+
    "\1\262\2\347\1\315\14\347\2\262\10\347\1\126\2\360"+
    "\10\126\2\360\3\126\1\361\1\166\1\126\3\360\1\126"+
    "\4\360\10\126\1\132\5\126\2\360\10\126\2\360\3\126"+
    "\1\362\2\126\3\360\1\126\4\360\15\126\1\0\2\334"+
    "\10\0\2\334\3\0\1\335\1\70\1\0\3\334\1\0"+
    "\4\334\15\0\1\76\2\363\10\76\2\363\3\76\1\364"+
    "\1\137\1\113\3\363\1\76\4\363\10\76\1\100\5\76"+
    "\2\363\10\76\2\363\3\76\1\364\1\76\1\113\3\363"+
    "\1\76\4\363\15\76\1\0\2\365\10\0\2\365\3\0"+
    "\1\366\1\122\1\0\3\365\1\0\4\365\10\0\1\65"+
    "\5\0\2\365\10\0\2\365\3\0\1\366\2\0\3\365"+
    "\1\0\4\365\15\0\1\126\2\367\10\126\2\367\3\126"+
    "\1\370\1\166\1\126\3\367\1\126\4\367\10\126\1\132"+
    "\5\126\2\367\10\126\2\367\3\126\1\371\2\126\3\367"+
    "\1\126\4\367\15\126\1\0\2\345\10\0\2\345\3\0"+
    "\1\346\1\70\1\0\3\345\1\0\4\345\15\0\1\76"+
    "\2\372\10\76\2\372\3\76\1\373\1\137\1\113\3\372"+
    "\1\76\4\372\10\76\1\100\5\76\2\372\10\76\2\372"+
    "\3\76\1\373\1\76\1\113\3\372\1\76\4\372\15\76"+
    "\1\0\2\374\10\0\2\374\3\0\1\375\1\122\1\0"+
    "\3\374\1\0\4\374\10\0\1\65\5\0\2\374\10\0"+
    "\2\374\3\0\1\375\2\0\3\374\1\0\4\374\15\0"+
    "\1\126\2\376\10\126\2\376\3\126\1\377\1\166\1\126"+
    "\3\376\1\126\4\376\10\126\1\132\5\126\2\376\10\126"+
    "\2\376\3\126\1\u0100\2\126\3\376\1\126\4\376\15\126"+
    "\1\0\2\356\10\0\2\356\3\0\1\357\1\70\1\0"+
    "\3\356\1\0\4\356\15\0\1\76\2\u0101\10\76\2\u0101"+
    "\3\76\1\u0102\1\137\1\113\3\u0101\1\76\4\u0101\10\76"+
    "\1\100\5\76\2\u0101\10\76\2\u0101\3\76\1\u0102\1\76"+
    "\1\113\3\u0101\1\76\4\u0101\15\76\1\0\2\u0103\10\0"+
    "\2\u0103\3\0\1\u0104\1\122\1\0\3\u0103\1\0\4\u0103"+
    "\10\0\1\65\5\0\2\u0103\10\0\2\u0103\3\0\1\u0104"+
    "\2\0\3\u0103\1\0\4\u0103\15\0\1\126\2\u0105\10\126"+
    "\2\u0105\3\126\1\u0106\1\166\1\126\3\u0105\1\126\4\u0105"+
    "\10\126\1\132\5\126\2\u0105\10\126\2\u0105\3\126\1\u0107"+
    "\2\126\3\u0105\1\126\4\u0105\15\126\1\0\2\365\10\0"+
    "\2\365\3\0\1\366\1\70\1\0\3\365\1\0\4\365"+
    "\15\0\1\76\2\u0108\10\76\2\u0108\3\76\1\u0109\1\137"+
    "\1\113\3\u0108\1\76\4\u0108\10\76\1\100\5\76\2\u0108"+
    "\10\76\2\u0108\3\76\1\u0109\1\76\1\113\3\u0108\1\76"+
    "\4\u0108\15\76\1\0\2\u010a\10\0\2\u010a\3\0\1\u010b"+
    "\1\122\1\0\3\u010a\1\0\4\u010a\10\0\1\65\5\0"+
    "\2\u010a\10\0\2\u010a\3\0\1\u010b\2\0\3\u010a\1\0"+
    "\4\u010a\15\0\1\126\2\u010c\10\126\2\u010c\3\126\1\u010d"+
    "\1\166\1\126\3\u010c\1\126\4\u010c\10\126\1\132\5\126"+
    "\2\u010c\10\126\2\u010c\3\126\1\u010e\2\126\3\u010c\1\126"+
    "\4\u010c\15\126\1\0\2\374\10\0\2\374\3\0\1\375"+
    "\1\70\1\0\3\374\1\0\4\374\15\0\1\76\2\u010f"+
    "\10\76\2\u010f\3\76\1\u0110\1\137\1\113\3\u010f\1\76"+
    "\4\u010f\10\76\1\100\5\76\2\u010f\10\76\2\u010f\3\76"+
    "\1\u0110\1\76\1\113\3\u010f\1\76\4\u010f\15\76\1\0"+
    "\2\u0111\10\0\2\u0111\3\0\1\u0112\1\122\1\0\3\u0111"+
    "\1\0\4\u0111\10\0\1\65\5\0\2\u0111\10\0\2\u0111"+
    "\3\0\1\u0112\2\0\3\u0111\1\0\4\u0111\15\0\1\126"+
    "\2\u0113\10\126\2\u0113\3\126\1\u0114\1\166\1\126\3\u0113"+
    "\1\126\4\u0113\10\126\1\132\5\126\2\u0113\10\126\2\u0113"+
    "\3\126\1\u0115\2\126\3\u0113\1\126\4\u0113\15\126\1\0"+
    "\2\u0103\10\0\2\u0103\3\0\1\u0104\1\70\1\0\3\u0103"+
    "\1\0\4\u0103\15\0\1\76\2\u0116\10\76\2\u0116\3\76"+
    "\1\u0117\1\137\1\113\3\u0116\1\76\4\u0116\10\76\1\100"+
    "\5\76\2\u0116\10\76\2\u0116\3\76\1\u0117\1\76\1\113"+
    "\3\u0116\1\76\4\u0116\15\76\1\0\2\u0118\10\0\2\u0118"+
    "\3\0\1\u0119\1\122\1\0\3\u0118\1\0\4\u0118\10\0"+
    "\1\65\5\0\2\u0118\10\0\2\u0118\3\0\1\u0119\2\0"+
    "\3\u0118\1\0\4\u0118\15\0\1\126\2\u011a\10\126\2\u011a"+
    "\3\126\1\u011b\1\166\1\126\3\u011a\1\126\4\u011a\10\126"+
    "\1\132\5\126\2\u011a\10\126\2\u011a\3\126\1\u011c\2\126"+
    "\3\u011a\1\126\4\u011a\15\126\1\0\2\u010a\10\0\2\u010a"+
    "\3\0\1\u010b\1\70\1\0\3\u010a\1\0\4\u010a\15\0"+
    "\1\76\2\u011d\10\76\2\u011d\3\76\1\u011e\1\137\1\113"+
    "\3\u011d\1\76\4\u011d\10\76\1\100\5\76\2\u011d\10\76"+
    "\2\u011d\3\76\1\u011e\1\76\1\113\3\u011d\1\76\4\u011d"+
    "\15\76\1\0\2\u011f\10\0\2\u011f\3\0\1\u0120\1\122"+
    "\1\0\3\u011f\1\0\4\u011f\10\0\1\65\5\0\2\u011f"+
    "\10\0\2\u011f\3\0\1\u0120\2\0\3\u011f\1\0\4\u011f"+
    "\15\0\1\126\2\u0121\10\126\2\u0121\3\126\1\u0122\1\166"+
    "\1\126\3\u0121\1\126\4\u0121\10\126\1\132\5\126\2\u0121"+
    "\10\126\2\u0121\3\126\1\u0123\2\126\3\u0121\1\126\4\u0121"+
    "\15\126\1\0\2\u0111\10\0\2\u0111\3\0\1\u0112\1\70"+
    "\1\0\3\u0111\1\0\4\u0111\15\0\1\76\2\u0124\10\76"+
    "\2\u0124\3\76\1\u0125\1\137\1\113\3\u0124\1\76\4\u0124"+
    "\10\76\1\100\5\76\2\u0124\10\76\2\u0124\3\76\1\u0125"+
    "\1\76\1\113\3\u0124\1\76\4\u0124\15\76\1\0\2\u0126"+
    "\10\0\2\u0126\3\0\1\u0127\1\122\1\0\3\u0126\1\0"+
    "\4\u0126\10\0\1\65\5\0\2\u0126\10\0\2\u0126\3\0"+
    "\1\u0127\2\0\3\u0126\1\0\4\u0126\15\0\1\126\2\u0128"+
    "\10\126\2\u0128\3\126\1\u0129\1\166\1\126\3\u0128\1\126"+
    "\4\u0128\10\126\1\132\5\126\2\u0128\10\126\2\u0128\3\126"+
    "\1\u012a\2\126\3\u0128\1\126\4\u0128\15\126\1\0\2\u0118"+
    "\10\0\2\u0118\3\0\1\u0119\1\70\1\0\3\u0118\1\0"+
    "\4\u0118\15\0\1\76\2\u012b\10\76\2\u012b\3\76\1\u012c"+
    "\1\137\1\113\3\u012b\1\76\4\u012b\10\76\1\100\5\76"+
    "\2\u012b\10\76\2\u012b\3\76\1\u012c\1\76\1\113\3\u012b"+
    "\1\76\4\u012b\15\76\1\0\2\u012d\10\0\2\u012d\3\0"+
    "\1\u012e\1\122\1\0\3\u012d\1\0\4\u012d\10\0\1\65"+
    "\5\0\2\u012d\10\0\2\u012d\3\0\1\u012e\2\0\3\u012d"+
    "\1\0\4\u012d\15\0\1\126\2\u012f\10\126\2\u012f\3\126"+
    "\1\u0130\1\166\1\126\3\u012f\1\126\4\u012f\10\126\1\132"+
    "\5\126\2\u012f\10\126\2\u012f\3\126\1\u0131\2\126\3\u012f"+
    "\1\126\4\u012f\15\126\1\0\2\u011f\10\0\2\u011f\3\0"+
    "\1\u0120\1\70\1\0\3\u011f\1\0\4\u011f\15\0\1\76"+
    "\2\u0132\10\76\2\u0132\3\76\1\u0133\1\137\1\113\3\u0132"+
    "\1\76\4\u0132\10\76\1\100\5\76\2\u0132\10\76\2\u0132"+
    "\3\76\1\u0133\1\76\1\113\3\u0132\1\76\4\u0132\15\76"+
    "\1\0\2\u0134\10\0\2\u0134\3\0\1\u0135\1\122\1\0"+
    "\3\u0134\1\0\4\u0134\10\0\1\65\5\0\2\u0134\10\0"+
    "\2\u0134\3\0\1\u0135\2\0\3\u0134\1\0\4\u0134\15\0"+
    "\1\126\2\u0136\10\126\2\u0136\3\126\1\u0137\1\166\1\126"+
    "\3\u0136\1\126\4\u0136\10\126\1\132\5\126\2\u0136\10\126"+
    "\2\u0136\3\126\1\u0138\2\126\3\u0136\1\126\4\u0136\15\126"+
    "\1\0\2\u0126\10\0\2\u0126\3\0\1\u0127\1\70\1\0"+
    "\3\u0126\1\0\4\u0126\15\0\1\76\2\u0139\10\76\2\u0139"+
    "\3\76\1\u013a\1\137\1\113\3\u0139\1\76\4\u0139\10\76"+
    "\1\100\5\76\2\u0139\10\76\2\u0139\3\76\1\u013a\1\76"+
    "\1\113\3\u0139\1\76\4\u0139\15\76\1\0\2\u013b\10\0"+
    "\2\u013b\3\0\1\u013c\1\122\1\0\3\u013b\1\0\4\u013b"+
    "\10\0\1\65\5\0\2\u013b\10\0\2\u013b\3\0\1\u013c"+
    "\2\0\3\u013b\1\0\4\u013b\15\0\1\126\2\u013d\10\126"+
    "\2\u013d\3\126\1\u013e\1\166\1\126\3\u013d\1\126\4\u013d"+
    "\10\126\1\132\5\126\2\u013d\10\126\2\u013d\3\126\1\u013f"+
    "\2\126\3\u013d\1\126\4\u013d\15\126\1\0\2\u012d\10\0"+
    "\2\u012d\3\0\1\u012e\1\70\1\0\3\u012d\1\0\4\u012d"+
    "\15\0\1\76\2\u0140\10\76\2\u0140\3\76\1\u0141\1\137"+
    "\1\113\3\u0140\1\76\4\u0140\10\76\1\100\5\76\2\u0140"+
    "\10\76\2\u0140\3\76\1\u0141\1\76\1\113\3\u0140\1\76"+
    "\4\u0140\15\76\1\0\2\u0142\10\0\2\u0142\3\0\1\u0143"+
    "\1\122\1\0\3\u0142\1\0\4\u0142\10\0\1\65\5\0"+
    "\2\u0142\10\0\2\u0142\3\0\1\u0143\2\0\3\u0142\1\0"+
    "\4\u0142\15\0\1\126\2\u0144\10\126\2\u0144\3\126\1\u0145"+
    "\1\166\1\126\3\u0144\1\126\4\u0144\10\126\1\132\5\126"+
    "\2\u0144\10\126\2\u0144\3\126\1\u0146\2\126\3\u0144\1\126"+
    "\4\u0144\15\126\1\0\2\u0134\10\0\2\u0134\3\0\1\u0135"+
    "\1\70\1\0\3\u0134\1\0\4\u0134\15\0\1\76\2\u0147"+
    "\10\76\2\u0147\3\76\1\u0148\1\137\1\113\3\u0147\1\76"+
    "\4\u0147\10\76\1\100\5\76\2\u0147\10\76\2\u0147\3\76"+
    "\1\u0148\1\76\1\113\3\u0147\1\76\4\u0147\15\76\1\0"+
    "\2\u0149\10\0\2\u0149\3\0\1\u014a\1\122\1\0\3\u0149"+
    "\1\0\4\u0149\10\0\1\65\5\0\2\u0149\10\0\2\u0149"+
    "\3\0\1\u014a\2\0\3\u0149\1\0\4\u0149\15\0\1\126"+
    "\2\u014b\10\126\2\u014b\3\126\1\u014c\1\166\1\126\3\u014b"+
    "\1\126\4\u014b\10\126\1\132\5\126\2\u014b\10\126\2\u014b"+
    "\3\126\1\u014d\2\126\3\u014b\1\126\4\u014b\15\126\1\0"+
    "\2\u013b\10\0\2\u013b\3\0\1\u013c\1\70\1\0\3\u013b"+
    "\1\0\4\u013b\15\0\1\76\2\u014e\10\76\2\u014e\3\76"+
    "\1\u014f\1\137\1\113\3\u014e\1\76\4\u014e\10\76\1\100"+
    "\5\76\2\u014e\10\76\2\u014e\3\76\1\u014f\1\76\1\113"+
    "\3\u014e\1\76\4\u014e\15\76\1\0\2\u0150\10\0\2\u0150"+
    "\3\0\1\u0151\1\122\1\0\3\u0150\1\0\4\u0150\10\0"+
    "\1\65\5\0\2\u0150\10\0\2\u0150\3\0\1\u0151\2\0"+
    "\3\u0150\1\0\4\u0150\15\0\1\126\2\u0152\10\126\2\u0152"+
    "\3\126\1\u0153\1\166\1\126\3\u0152\1\126\4\u0152\10\126"+
    "\1\132\5\126\2\u0152\10\126\2\u0152\3\126\1\u0154\2\126"+
    "\3\u0152\1\126\4\u0152\15\126\1\0\2\u0142\10\0\2\u0142"+
    "\3\0\1\u0143\1\70\1\0\3\u0142\1\0\4\u0142\15\0"+
    "\1\76\2\u0155\10\76\2\u0155\3\76\1\u0156\1\137\1\113"+
    "\3\u0155\1\76\4\u0155\10\76\1\100\5\76\2\u0155\10\76"+
    "\2\u0155\3\76\1\u0156\1\76\1\113\3\u0155\1\76\4\u0155"+
    "\15\76\1\0\2\u0157\10\0\2\u0157\3\0\1\u0158\1\122"+
    "\1\0\3\u0157\1\0\4\u0157\10\0\1\65\5\0\2\u0157"+
    "\10\0\2\u0157\3\0\1\u0158\2\0\3\u0157\1\0\4\u0157"+
    "\15\0\1\126\2\u0159\10\126\2\u0159\3\126\1\u015a\1\166"+
    "\1\126\3\u0159\1\126\4\u0159\10\126\1\132\5\126\2\u0159"+
    "\10\126\2\u0159\3\126\1\u015b\2\126\3\u0159\1\126\4\u0159"+
    "\15\126\1\0\2\u0149\10\0\2\u0149\3\0\1\u014a\1\70"+
    "\1\0\3\u0149\1\0\4\u0149\15\0\1\76\2\u015c\10\76"+
    "\2\u015c\3\76\1\u015d\1\137\1\113\3\u015c\1\76\4\u015c"+
    "\10\76\1\100\5\76\2\u015c\10\76\2\u015c\3\76\1\u015d"+
    "\1\76\1\113\3\u015c\1\76\4\u015c\15\76\1\0\2\u015e"+
    "\10\0\2\u015e\3\0\1\u015f\1\122\1\0\3\u015e\1\0"+
    "\4\u015e\10\0\1\65\5\0\2\u015e\10\0\2\u015e\3\0"+
    "\1\u015f\2\0\3\u015e\1\0\4\u015e\15\0\1\126\2\u0160"+
    "\10\126\2\u0160\3\126\1\u0161\1\166\1\126\3\u0160\1\126"+
    "\4\u0160\10\126\1\132\5\126\2\u0160\10\126\2\u0160\3\126"+
    "\1\u0162\2\126\3\u0160\1\126\4\u0160\15\126\1\0\2\u0150"+
    "\10\0\2\u0150\3\0\1\u0151\1\70\1\0\3\u0150\1\0"+
    "\4\u0150\15\0\1\76\2\u0163\10\76\2\u0163\3\76\1\u0164"+
    "\1\137\1\113\3\u0163\1\76\4\u0163\10\76\1\100\5\76"+
    "\2\u0163\10\76\2\u0163\3\76\1\u0164\1\76\1\113\3\u0163"+
    "\1\76\4\u0163\15\76\1\0\2\u0165\10\0\2\u0165\3\0"+
    "\1\u0166\1\122\1\0\3\u0165\1\0\4\u0165\10\0\1\65"+
    "\5\0\2\u0165\10\0\2\u0165\3\0\1\u0166\2\0\3\u0165"+
    "\1\0\4\u0165\15\0\1\126\2\u0167\10\126\2\u0167\3\126"+
    "\1\u0168\1\166\1\126\3\u0167\1\126\4\u0167\10\126\1\132"+
    "\5\126\2\u0167\10\126\2\u0167\3\126\1\u0169\2\126\3\u0167"+
    "\1\126\4\u0167\15\126\1\0\2\u0157\10\0\2\u0157\3\0"+
    "\1\u0158\1\70\1\0\3\u0157\1\0\4\u0157\15\0\1\76"+
    "\2\u016a\10\76\2\u016a\3\76\1\u016b\1\137\1\113\3\u016a"+
    "\1\76\4\u016a\10\76\1\100\5\76\2\u016a\10\76\2\u016a"+
    "\3\76\1\u016b\1\76\1\113\3\u016a\1\76\4\u016a\15\76"+
    "\1\0\2\u016c\10\0\2\u016c\3\0\1\u016d\1\122\1\0"+
    "\3\u016c\1\0\4\u016c\10\0\1\65\5\0\2\u016c\10\0"+
    "\2\u016c\3\0\1\u016d\2\0\3\u016c\1\0\4\u016c\15\0"+
    "\1\126\2\u016e\10\126\2\u016e\3\126\1\u016f\1\166\1\126"+
    "\3\u016e\1\126\4\u016e\10\126\1\132\5\126\2\u016e\10\126"+
    "\2\u016e\3\126\1\u0170\2\126\3\u016e\1\126\4\u016e\15\126"+
    "\1\0\2\u015e\10\0\2\u015e\3\0\1\u015f\1\70\1\0"+
    "\3\u015e\1\0\4\u015e\15\0\1\76\2\u0171\10\76\2\u0171"+
    "\3\76\1\u0172\1\137\1\113\3\u0171\1\76\4\u0171\10\76"+
    "\1\100\5\76\2\u0171\10\76\2\u0171\3\76\1\u0172\1\76"+
    "\1\113\3\u0171\1\76\4\u0171\15\76\1\0\2\u0173\10\0"+
    "\2\u0173\3\0\1\u0174\1\122\1\0\3\u0173\1\0\4\u0173"+
    "\10\0\1\65\5\0\2\u0173\10\0\2\u0173\3\0\1\u0174"+
    "\2\0\3\u0173\1\0\4\u0173\15\0\1\126\2\u0175\10\126"+
    "\2\u0175\3\126\1\u0176\1\166\1\126\3\u0175\1\126\4\u0175"+
    "\10\126\1\132\5\126\2\u0175\10\126\2\u0175\3\126\1\u0177"+
    "\2\126\3\u0175\1\126\4\u0175\15\126\1\0\2\u0165\10\0"+
    "\2\u0165\3\0\1\u0166\1\70\1\0\3\u0165\1\0\4\u0165"+
    "\15\0\1\76\2\u0178\10\76\2\u0178\3\76\1\u0179\1\137"+
    "\1\113\3\u0178\1\76\4\u0178\10\76\1\100\5\76\2\u0178"+
    "\10\76\2\u0178\3\76\1\u0179\1\76\1\113\3\u0178\1\76"+
    "\4\u0178\15\76\1\0\2\u017a\10\0\2\u017a\3\0\1\u017b"+
    "\1\122\1\0\3\u017a\1\0\4\u017a\10\0\1\65\5\0"+
    "\2\u017a\10\0\2\u017a\3\0\1\u017b\2\0\3\u017a\1\0"+
    "\4\u017a\15\0\1\126\2\u017c\10\126\2\u017c\3\126\1\u017d"+
    "\1\166\1\126\3\u017c\1\126\4\u017c\10\126\1\132\5\126"+
    "\2\u017c\10\126\2\u017c\3\126\1\u017e\2\126\3\u017c\1\126"+
    "\4\u017c\15\126\1\0\2\u016c\10\0\2\u016c\3\0\1\u016d"+
    "\1\70\1\0\3\u016c\1\0\4\u016c\15\0\1\76\2\u017f"+
    "\10\76\2\u017f\3\76\1\u0180\1\137\1\113\3\u017f\1\76"+
    "\4\u017f\10\76\1\100\5\76\2\u017f\10\76\2\u017f\3\76"+
    "\1\u0180\1\76\1\113\3\u017f\1\76\4\u017f\15\76\1\0"+
    "\2\u0181\10\0\2\u0181\3\0\1\u0182\1\122\1\0\3\u0181"+
    "\1\0\4\u0181\10\0\1\65\5\0\2\u0181\10\0\2\u0181"+
    "\3\0\1\u0182\2\0\3\u0181\1\0\4\u0181\15\0\1\126"+
    "\2\u0183\10\126\2\u0183\3\126\1\u0184\1\166\1\126\3\u0183"+
    "\1\126\4\u0183\10\126\1\132\5\126\2\u0183\10\126\2\u0183"+
    "\3\126\1\u0185\2\126\3\u0183\1\126\4\u0183\15\126\1\0"+
    "\2\u0173\10\0\2\u0173\3\0\1\u0174\1\70\1\0\3\u0173"+
    "\1\0\4\u0173\15\0\1\76\2\u0186\10\76\2\u0186\3\76"+
    "\1\u0187\1\137\1\113\3\u0186\1\76\4\u0186\10\76\1\100"+
    "\5\76\2\u0186\10\76\2\u0186\3\76\1\u0187\1\76\1\113"+
    "\3\u0186\1\76\4\u0186\15\76\1\0\2\u0188\10\0\2\u0188"+
    "\3\0\1\u0189\1\122\1\0\3\u0188\1\0\4\u0188\10\0"+
    "\1\65\5\0\2\u0188\10\0\2\u0188\3\0\1\u0189\2\0"+
    "\3\u0188\1\0\4\u0188\15\0\1\126\2\u018a\10\126\2\u018a"+
    "\3\126\1\u018b\1\166\1\126\3\u018a\1\126\4\u018a\10\126"+
    "\1\132\5\126\2\u018a\10\126\2\u018a\3\126\1\u018c\2\126"+
    "\3\u018a\1\126\4\u018a\15\126\1\0\2\u017a\10\0\2\u017a"+
    "\3\0\1\u017b\1\70\1\0\3\u017a\1\0\4\u017a\15\0"+
    "\1\76\2\u018d\10\76\2\u018d\3\76\1\u018e\1\137\1\113"+
    "\3\u018d\1\76\4\u018d\10\76\1\100\5\76\2\u018d\10\76"+
    "\2\u018d\3\76\1\u018e\1\76\1\113\3\u018d\1\76\4\u018d"+
    "\15\76\1\0\2\u018f\10\0\2\u018f\3\0\1\u0190\1\122"+
    "\1\0\3\u018f\1\0\4\u018f\10\0\1\65\5\0\2\u018f"+
    "\10\0\2\u018f\3\0\1\u0190\2\0\3\u018f\1\0\4\u018f"+
    "\15\0\1\126\2\u0191\10\126\2\u0191\3\126\1\u0192\1\166"+
    "\1\126\3\u0191\1\126\4\u0191\10\126\1\132\5\126\2\u0191"+
    "\10\126\2\u0191\3\126\1\u0193\2\126\3\u0191\1\126\4\u0191"+
    "\15\126\1\0\2\u0181\10\0\2\u0181\3\0\1\u0182\1\70"+
    "\1\0\3\u0181\1\0\4\u0181\15\0\1\76\2\u0194\10\76"+
    "\2\u0194\3\76\1\u0195\1\137\1\113\3\u0194\1\76\4\u0194"+
    "\10\76\1\100\5\76\2\u0194\10\76\2\u0194\3\76\1\u0195"+
    "\1\76\1\113\3\u0194\1\76\4\u0194\15\76\1\0\2\u0196"+
    "\10\0\2\u0196\3\0\1\u0197\1\122\1\0\3\u0196\1\0"+
    "\4\u0196\10\0\1\65\5\0\2\u0196\10\0\2\u0196\3\0"+
    "\1\u0197\2\0\3\u0196\1\0\4\u0196\15\0\1\126\2\u0198"+
    "\10\126\2\u0198\3\126\1\u0199\1\166\1\126\3\u0198\1\126"+
    "\4\u0198\10\126\1\132\5\126\2\u0198\10\126\2\u0198\3\126"+
    "\1\u019a\2\126\3\u0198\1\126\4\u0198\15\126\1\0\2\u0188"+
    "\10\0\2\u0188\3\0\1\u0189\1\70\1\0\3\u0188\1\0"+
    "\4\u0188\15\0\1\76\2\u019b\10\76\2\u019b\3\76\1\u019c"+
    "\1\137\1\113\3\u019b\1\76\4\u019b\10\76\1\100\5\76"+
    "\2\u019b\10\76\2\u019b\3\76\1\u019c\1\76\1\113\3\u019b"+
    "\1\76\4\u019b\15\76\1\0\2\u019d\10\0\2\u019d\3\0"+
    "\1\u019e\1\122\1\0\3\u019d\1\0\4\u019d\10\0\1\65"+
    "\5\0\2\u019d\10\0\2\u019d\3\0\1\u019e\2\0\3\u019d"+
    "\1\0\4\u019d\15\0\1\126\2\u019f\10\126\2\u019f\3\126"+
    "\1\u01a0\1\166\1\126\3\u019f\1\126\4\u019f\10\126\1\132"+
    "\5\126\2\u019f\10\126\2\u019f\3\126\1\u01a1\2\126\3\u019f"+
    "\1\126\4\u019f\15\126\1\0\2\u018f\10\0\2\u018f\3\0"+
    "\1\u0190\1\70\1\0\3\u018f\1\0\4\u018f\15\0\1\76"+
    "\2\u01a2\10\76\2\u01a2\3\76\1\u01a3\1\137\1\113\3\u01a2"+
    "\1\76\4\u01a2\10\76\1\100\5\76\2\u01a2\10\76\2\u01a2"+
    "\3\76\1\u01a3\1\76\1\113\3\u01a2\1\76\4\u01a2\15\76"+
    "\1\0\2\u01a4\10\0\2\u01a4\3\0\1\u01a5\1\122\1\0"+
    "\3\u01a4\1\0\4\u01a4\10\0\1\65\5\0\2\u01a4\10\0"+
    "\2\u01a4\3\0\1\u01a5\2\0\3\u01a4\1\0\4\u01a4\15\0"+
    "\1\126\2\u01a6\10\126\2\u01a6\3\126\1\u01a7\1\166\1\126"+
    "\3\u01a6\1\126\4\u01a6\10\126\1\132\5\126\2\u01a6\10\126"+
    "\2\u01a6\3\126\1\u01a8\2\126\3\u01a6\1\126\4\u01a6\15\126"+
    "\1\0\2\u0196\10\0\2\u0196\3\0\1\u0197\1\70\1\0"+
    "\3\u0196\1\0\4\u0196\15\0\1\76\2\u01a9\10\76\2\u01a9"+
    "\3\76\1\u01aa\1\137\1\113\3\u01a9\1\76\4\u01a9\10\76"+
    "\1\100\5\76\2\u01a9\10\76\2\u01a9\3\76\1\u01aa\1\76"+
    "\1\113\3\u01a9\1\76\4\u01a9\15\76\1\0\2\u01ab\10\0"+
    "\2\u01ab\3\0\1\u01ac\1\122\1\0\3\u01ab\1\0\4\u01ab"+
    "\10\0\1\65\5\0\2\u01ab\10\0\2\u01ab\3\0\1\u01ac"+
    "\2\0\3\u01ab\1\0\4\u01ab\15\0\1\126\2\u01ad\10\126"+
    "\2\u01ad\3\126\1\u01ae\1\166\1\126\3\u01ad\1\126\4\u01ad"+
    "\10\126\1\132\5\126\2\u01ad\10\126\2\u01ad\3\126\1\u01af"+
    "\2\126\3\u01ad\1\126\4\u01ad\15\126\1\0\2\u019d\10\0"+
    "\2\u019d\3\0\1\u019e\1\70\1\0\3\u019d\1\0\4\u019d"+
    "\15\0\1\76\2\u01b0\10\76\2\u01b0\3\76\1\u01b1\1\137"+
    "\1\113\3\u01b0\1\76\4\u01b0\10\76\1\100\5\76\2\u01b0"+
    "\10\76\2\u01b0\3\76\1\u01b1\1\76\1\113\3\u01b0\1\76"+
    "\4\u01b0\15\76\1\0\2\u01b2\10\0\2\u01b2\3\0\1\u01b3"+
    "\1\122\1\0\3\u01b2\1\0\4\u01b2\10\0\1\65\5\0"+
    "\2\u01b2\10\0\2\u01b2\3\0\1\u01b3\2\0\3\u01b2\1\0"+
    "\4\u01b2\15\0\1\126\2\u01b4\10\126\2\u01b4\3\126\1\u01b5"+
    "\1\166\1\126\3\u01b4\1\126\4\u01b4\10\126\1\132\5\126"+
    "\2\u01b4\10\126\2\u01b4\3\126\1\u01b6\2\126\3\u01b4\1\126"+
    "\4\u01b4\15\126\1\0\2\u01a4\10\0\2\u01a4\3\0\1\u01a5"+
    "\1\70\1\0\3\u01a4\1\0\4\u01a4\15\0\1\76\2\u01b7"+
    "\10\76\2\u01b7\3\76\1\u01b8\1\137\1\113\3\u01b7\1\76"+
    "\4\u01b7\10\76\1\100\5\76\2\u01b7\10\76\2\u01b7\3\76"+
    "\1\u01b8\1\76\1\113\3\u01b7\1\76\4\u01b7\15\76\1\0"+
    "\2\u01b9\10\0\2\u01b9\3\0\1\u01ba\1\122\1\0\3\u01b9"+
    "\1\0\4\u01b9\10\0\1\65\5\0\2\u01b9\10\0\2\u01b9"+
    "\3\0\1\u01ba\2\0\3\u01b9\1\0\4\u01b9\15\0\1\126"+
    "\2\u01bb\10\126\2\u01bb\3\126\1\u01bc\1\166\1\126\3\u01bb"+
    "\1\126\4\u01bb\10\126\1\132\5\126\2\u01bb\10\126\2\u01bb"+
    "\3\126\1\u01bd\2\126\3\u01bb\1\126\4\u01bb\15\126\1\0"+
    "\2\u01ab\10\0\2\u01ab\3\0\1\u01ac\1\70\1\0\3\u01ab"+
    "\1\0\4\u01ab\15\0\1\76\2\u01be\10\76\2\u01be\3\76"+
    "\1\u01bf\1\137\1\113\3\u01be\1\76\4\u01be\10\76\1\100"+
    "\5\76\2\u01be\10\76\2\u01be\3\76\1\u01bf\1\76\1\113"+
    "\3\u01be\1\76\4\u01be\15\76\1\0\2\u01c0\10\0\2\u01c0"+
    "\3\0\1\u01c1\1\122\1\0\3\u01c0\1\0\4\u01c0\10\0"+
    "\1\65\5\0\2\u01c0\10\0\2\u01c0\3\0\1\u01c1\2\0"+
    "\3\u01c0\1\0\4\u01c0\15\0\1\126\2\u01c2\10\126\2\u01c2"+
    "\3\126\1\u01c3\1\166\1\126\3\u01c2\1\126\4\u01c2\10\126"+
    "\1\132\5\126\2\u01c2\10\126\2\u01c2\3\126\1\u01c4\2\126"+
    "\3\u01c2\1\126\4\u01c2\15\126\1\0\2\u01b2\10\0\2\u01b2"+
    "\3\0\1\u01b3\1\70\1\0\3\u01b2\1\0\4\u01b2\15\0"+
    "\1\76\2\u01c5\10\76\2\u01c5\3\76\1\u01c6\1\137\1\113"+
    "\3\u01c5\1\76\4\u01c5\10\76\1\100\5\76\2\u01c5\10\76"+
    "\2\u01c5\3\76\1\u01c6\1\76\1\113\3\u01c5\1\76\4\u01c5"+
    "\15\76\1\0\2\u01c7\10\0\2\u01c7\3\0\1\u01c8\1\122"+
    "\1\0\3\u01c7\1\0\4\u01c7\10\0\1\65\5\0\2\u01c7"+
    "\10\0\2\u01c7\3\0\1\u01c8\2\0\3\u01c7\1\0\4\u01c7"+
    "\15\0\1\126\2\u01c9\10\126\2\u01c9\3\126\1\u01ca\1\166"+
    "\1\126\3\u01c9\1\126\4\u01c9\10\126\1\132\5\126\2\u01c9"+
    "\10\126\2\u01c9\3\126\1\u01cb\2\126\3\u01c9\1\126\4\u01c9"+
    "\15\126\1\0\2\u01b9\10\0\2\u01b9\3\0\1\u01ba\1\70"+
    "\1\0\3\u01b9\1\0\4\u01b9\15\0\1\76\2\u01cc\10\76"+
    "\2\u01cc\3\76\1\u01cd\1\137\1\113\3\u01cc\1\76\4\u01cc"+
    "\10\76\1\100\5\76\2\u01cc\10\76\2\u01cc\3\76\1\u01cd"+
    "\1\76\1\113\3\u01cc\1\76\4\u01cc\15\76\1\0\2\u01ce"+
    "\10\0\2\u01ce\3\0\1\u01cf\1\122\1\0\3\u01ce\1\0"+
    "\4\u01ce\10\0\1\65\5\0\2\u01ce\10\0\2\u01ce\3\0"+
    "\1\u01cf\2\0\3\u01ce\1\0\4\u01ce\15\0\1\126\2\u01d0"+
    "\10\126\2\u01d0\3\126\1\u01d1\1\166\1\126\3\u01d0\1\126"+
    "\4\u01d0\10\126\1\132\5\126\2\u01d0\10\126\2\u01d0\3\126"+
    "\1\u01d2\2\126\3\u01d0\1\126\4\u01d0\15\126\1\0\2\u01c0"+
    "\10\0\2\u01c0\3\0\1\u01c1\1\70\1\0\3\u01c0\1\0"+
    "\4\u01c0\15\0\1\76\2\u01d3\10\76\2\u01d3\3\76\1\u01d4"+
    "\1\137\1\113\3\u01d3\1\76\4\u01d3\10\76\1\100\5\76"+
    "\2\u01d3\10\76\2\u01d3\3\76\1\u01d4\1\76\1\113\3\u01d3"+
    "\1\76\4\u01d3\15\76\1\0\2\u01d5\10\0\2\u01d5\3\0"+
    "\1\u01d6\1\122\1\0\3\u01d5\1\0\4\u01d5\10\0\1\65"+
    "\5\0\2\u01d5\10\0\2\u01d5\3\0\1\u01d6\2\0\3\u01d5"+
    "\1\0\4\u01d5\15\0\1\126\2\u01d7\10\126\2\u01d7\3\126"+
    "\1\u01d8\1\166\1\126\3\u01d7\1\126\4\u01d7\10\126\1\132"+
    "\5\126\2\u01d7\10\126\2\u01d7\3\126\1\u01d9\2\126\3\u01d7"+
    "\1\126\4\u01d7\15\126\1\0\2\u01c7\10\0\2\u01c7\3\0"+
    "\1\u01c8\1\70\1\0\3\u01c7\1\0\4\u01c7\15\0\1\76"+
    "\2\u01da\10\76\2\u01da\3\76\1\u01db\1\137\1\113\3\u01da"+
    "\1\76\4\u01da\10\76\1\100\5\76\2\u01da\10\76\2\u01da"+
    "\3\76\1\u01db\1\76\1\113\3\u01da\1\76\4\u01da\15\76"+
    "\1\0\2\u01dc\10\0\2\u01dc\3\0\1\u01dd\1\122\1\0"+
    "\3\u01dc\1\0\4\u01dc\10\0\1\65\5\0\2\u01dc\10\0"+
    "\2\u01dc\3\0\1\u01dd\2\0\3\u01dc\1\0\4\u01dc\15\0"+
    "\1\126\2\u01de\10\126\2\u01de\3\126\1\u01df\1\166\1\126"+
    "\3\u01de\1\126\4\u01de\10\126\1\132\5\126\2\u01de\10\126"+
    "\2\u01de\3\126\1\u01e0\2\126\3\u01de\1\126\4\u01de\15\126"+
    "\1\0\2\u01ce\10\0\2\u01ce\3\0\1\u01cf\1\70\1\0"+
    "\3\u01ce\1\0\4\u01ce\15\0\1\76\2\u01e1\10\76\2\u01e1"+
    "\3\76\1\u01e2\1\137\1\113\3\u01e1\1\76\4\u01e1\10\76"+
    "\1\100\5\76\2\u01e1\10\76\2\u01e1\3\76\1\u01e2\1\76"+
    "\1\113\3\u01e1\1\76\4\u01e1\15\76\1\0\2\u01e3\10\0"+
    "\2\u01e3\3\0\1\u01e4\1\122\1\0\3\u01e3\1\0\4\u01e3"+
    "\10\0\1\65\5\0\2\u01e3\10\0\2\u01e3\3\0\1\u01e4"+
    "\2\0\3\u01e3\1\0\4\u01e3\15\0\1\126\2\u01e5\10\126"+
    "\2\u01e5\3\126\1\u01e6\1\166\1\126\3\u01e5\1\126\4\u01e5"+
    "\10\126\1\132\5\126\2\u01e5\10\126\2\u01e5\3\126\1\u01e7"+
    "\2\126\3\u01e5\1\126\4\u01e5\15\126\1\0\2\u01d5\10\0"+
    "\2\u01d5\3\0\1\u01d6\1\70\1\0\3\u01d5\1\0\4\u01d5"+
    "\15\0\1\76\2\u01e8\10\76\2\u01e8\3\76\1\u01e9\1\137"+
    "\1\113\3\u01e8\1\76\4\u01e8\10\76\1\100\5\76\2\u01e8"+
    "\10\76\2\u01e8\3\76\1\u01e9\1\76\1\113\3\u01e8\1\76"+
    "\4\u01e8\15\76\1\0\2\u01ea\10\0\2\u01ea\3\0\1\u01eb"+
    "\1\122\1\0\3\u01ea\1\0\4\u01ea\10\0\1\65\5\0"+
    "\2\u01ea\10\0\2\u01ea\3\0\1\u01eb\2\0\3\u01ea\1\0"+
    "\4\u01ea\15\0\1\126\2\u01ec\10\126\2\u01ec\3\126\1\u01ed"+
    "\1\166\1\126\3\u01ec\1\126\4\u01ec\10\126\1\132\5\126"+
    "\2\u01ec\10\126\2\u01ec\3\126\1\u01ee\2\126\3\u01ec\1\126"+
    "\4\u01ec\15\126\1\0\2\u01dc\10\0\2\u01dc\3\0\1\u01dd"+
    "\1\70\1\0\3\u01dc\1\0\4\u01dc\15\0\1\76\2\u01ef"+
    "\10\76\2\u01ef\3\76\1\u01f0\1\137\1\113\3\u01ef\1\76"+
    "\4\u01ef\10\76\1\100\5\76\2\u01ef\10\76\2\u01ef\3\76"+
    "\1\u01f0\1\76\1\113\3\u01ef\1\76\4\u01ef\15\76\1\0"+
    "\2\u01f1\10\0\2\u01f1\3\0\1\u01f2\1\122\1\0\3\u01f1"+
    "\1\0\4\u01f1\10\0\1\65\5\0\2\u01f1\10\0\2\u01f1"+
    "\3\0\1\u01f2\2\0\3\u01f1\1\0\4\u01f1\15\0\1\126"+
    "\2\u01f3\10\126\2\u01f3\3\126\1\u01f4\1\166\1\126\3\u01f3"+
    "\1\126\4\u01f3\10\126\1\132\5\126\2\u01f3\10\126\2\u01f3"+
    "\3\126\1\u01f5\2\126\3\u01f3\1\126\4\u01f3\15\126\1\0"+
    "\2\u01e3\10\0\2\u01e3\3\0\1\u01e4\1\70\1\0\3\u01e3"+
    "\1\0\4\u01e3\15\0\1\76\2\u01f6\10\76\2\u01f6\3\76"+
    "\1\u01f7\1\137\1\113\3\u01f6\1\76\4\u01f6\10\76\1\100"+
    "\5\76\2\u01f6\10\76\2\u01f6\3\76\1\u01f7\1\76\1\113"+
    "\3\u01f6\1\76\4\u01f6\15\76\1\0\2\u01f8\10\0\2\u01f8"+
    "\3\0\1\u01f9\1\122\1\0\3\u01f8\1\0\4\u01f8\10\0"+
    "\1\65\5\0\2\u01f8\10\0\2\u01f8\3\0\1\u01f9\2\0"+
    "\3\u01f8\1\0\4\u01f8\15\0\1\126\2\u01fa\10\126\2\u01fa"+
    "\3\126\1\u01fb\1\166\1\126\3\u01fa\1\126\4\u01fa\10\126"+
    "\1\132\5\126\2\u01fa\10\126\2\u01fa\3\126\1\u01fc\2\126"+
    "\3\u01fa\1\126\4\u01fa\15\126\1\0\2\u01ea\10\0\2\u01ea"+
    "\3\0\1\u01eb\1\70\1\0\3\u01ea\1\0\4\u01ea\15\0"+
    "\1\76\2\u01fd\10\76\2\u01fd\3\76\1\u01fe\1\137\1\113"+
    "\3\u01fd\1\76\4\u01fd\10\76\1\100\5\76\2\u01fd\10\76"+
    "\2\u01fd\3\76\1\u01fe\1\76\1\113\3\u01fd\1\76\4\u01fd"+
    "\15\76\1\0\2\u01ff\10\0\2\u01ff\3\0\1\u0200\1\122"+
    "\1\0\3\u01ff\1\0\4\u01ff\10\0\1\65\5\0\2\u01ff"+
    "\10\0\2\u01ff\3\0\1\u0200\2\0\3\u01ff\1\0\4\u01ff"+
    "\15\0\1\126\2\u0201\10\126\2\u0201\3\126\1\u0202\1\166"+
    "\1\126\3\u0201\1\126\4\u0201\10\126\1\132\5\126\2\u0201"+
    "\10\126\2\u0201\3\126\1\u0203\2\126\3\u0201\1\126\4\u0201"+
    "\15\126\1\0\2\u01f1\10\0\2\u01f1\3\0\1\u01f2\1\70"+
    "\1\0\3\u01f1\1\0\4\u01f1\15\0\1\76\2\u0204\10\76"+
    "\2\u0204\3\76\1\u0205\1\137\1\113\3\u0204\1\76\4\u0204"+
    "\10\76\1\100\5\76\2\u0204\10\76\2\u0204\3\76\1\u0205"+
    "\1\76\1\113\3\u0204\1\76\4\u0204\15\76\1\0\2\u0206"+
    "\10\0\2\u0206\3\0\1\u0207\1\122\1\0\3\u0206\1\0"+
    "\4\u0206\10\0\1\65\5\0\2\u0206\10\0\2\u0206\3\0"+
    "\1\u0207\2\0\3\u0206\1\0\4\u0206\15\0\1\126\2\u0208"+
    "\10\126\2\u0208\3\126\1\u0209\1\166\1\126\3\u0208\1\126"+
    "\4\u0208\10\126\1\132\5\126\2\u0208\10\126\2\u0208\3\126"+
    "\1\u020a\2\126\3\u0208\1\126\4\u0208\15\126\1\0\2\u01f8"+
    "\10\0\2\u01f8\3\0\1\u01f9\1\70\1\0\3\u01f8\1\0"+
    "\4\u01f8\15\0\1\76\2\u020b\10\76\2\u020b\3\76\1\u020c"+
    "\1\137\1\113\3\u020b\1\76\4\u020b\10\76\1\100\5\76"+
    "\2\u020b\10\76\2\u020b\3\76\1\u020c\1\76\1\113\3\u020b"+
    "\1\76\4\u020b\15\76\1\0\2\u020d\10\0\2\u020d\3\0"+
    "\1\u020e\1\122\1\0\3\u020d\1\0\4\u020d\10\0\1\65"+
    "\5\0\2\u020d\10\0\2\u020d\3\0\1\u020e\2\0\3\u020d"+
    "\1\0\4\u020d\15\0\1\126\2\u020f\10\126\2\u020f\3\126"+
    "\1\u0210\1\166\1\126\3\u020f\1\126\4\u020f\10\126\1\132"+
    "\5\126\2\u020f\10\126\2\u020f\3\126\1\u0211\2\126\3\u020f"+
    "\1\126\4\u020f\15\126\1\0\2\u01ff\10\0\2\u01ff\3\0"+
    "\1\u0200\1\70\1\0\3\u01ff\1\0\4\u01ff\15\0\1\76"+
    "\2\u0212\10\76\2\u0212\3\76\1\u0213\1\137\1\113\3\u0212"+
    "\1\76\4\u0212\10\76\1\100\5\76\2\u0212\10\76\2\u0212"+
    "\3\76\1\u0213\1\76\1\113\3\u0212\1\76\4\u0212\15\76"+
    "\1\0\2\u0214\10\0\2\u0214\3\0\1\u0215\1\122\1\0"+
    "\3\u0214\1\0\4\u0214\10\0\1\65\5\0\2\u0214\10\0"+
    "\2\u0214\3\0\1\u0215\2\0\3\u0214\1\0\4\u0214\15\0"+
    "\1\126\2\u0216\10\126\2\u0216\3\126\1\u0217\1\166\1\126"+
    "\3\u0216\1\126\4\u0216\10\126\1\132\5\126\2\u0216\10\126"+
    "\2\u0216\3\126\1\u0218\2\126\3\u0216\1\126\4\u0216\15\126"+
    "\1\0\2\u0206\10\0\2\u0206\3\0\1\u0207\1\70\1\0"+
    "\3\u0206\1\0\4\u0206\15\0\1\76\2\u0219\10\76\2\u0219"+
    "\3\76\1\u021a\1\137\1\113\3\u0219\1\76\4\u0219\10\76"+
    "\1\100\5\76\2\u0219\10\76\2\u0219\3\76\1\u021a\1\76"+
    "\1\113\3\u0219\1\76\4\u0219\15\76\1\0\2\u021b\10\0"+
    "\2\u021b\3\0\1\u021c\1\122\1\0\3\u021b\1\0\4\u021b"+
    "\10\0\1\65\5\0\2\u021b\10\0\2\u021b\3\0\1\u021c"+
    "\2\0\3\u021b\1\0\4\u021b\15\0\1\126\2\u021d\10\126"+
    "\2\u021d\3\126\1\u021e\1\166\1\126\3\u021d\1\126\4\u021d"+
    "\10\126\1\132\5\126\2\u021d\10\126\2\u021d\3\126\1\u021f"+
    "\2\126\3\u021d\1\126\4\u021d\15\126\1\0\2\u020d\10\0"+
    "\2\u020d\3\0\1\u020e\1\70\1\0\3\u020d\1\0\4\u020d"+
    "\15\0\1\76\2\u0220\10\76\2\u0220\3\76\1\u0221\1\137"+
    "\1\113\3\u0220\1\76\4\u0220\10\76\1\100\5\76\2\u0220"+
    "\10\76\2\u0220\3\76\1\u0221\1\76\1\113\3\u0220\1\76"+
    "\4\u0220\15\76\1\0\2\u0222\10\0\2\u0222\3\0\1\u0223"+
    "\1\122\1\0\3\u0222\1\0\4\u0222\10\0\1\65\5\0"+
    "\2\u0222\10\0\2\u0222\3\0\1\u0223\2\0\3\u0222\1\0"+
    "\4\u0222\15\0\1\126\2\u0224\10\126\2\u0224\3\126\1\u0225"+
    "\1\166\1\126\3\u0224\1\126\4\u0224\10\126\1\132\5\126"+
    "\2\u0224\10\126\2\u0224\3\126\1\u0226\2\126\3\u0224\1\126"+
    "\4\u0224\15\126\1\0\2\u0214\10\0\2\u0214\3\0\1\u0215"+
    "\1\70\1\0\3\u0214\1\0\4\u0214\15\0\1\76\2\u0227"+
    "\10\76\2\u0227\3\76\1\u0228\1\137\1\113\3\u0227\1\76"+
    "\4\u0227\10\76\1\100\5\76\2\u0227\10\76\2\u0227\3\76"+
    "\1\u0228\1\76\1\113\3\u0227\1\76\4\u0227\15\76\1\0"+
    "\2\u0229\10\0\2\u0229\3\0\1\u022a\1\122\1\0\3\u0229"+
    "\1\0\4\u0229\10\0\1\65\5\0\2\u0229\10\0\2\u0229"+
    "\3\0\1\u022a\2\0\3\u0229\1\0\4\u0229\15\0\1\126"+
    "\2\u022b\10\126\2\u022b\3\126\1\u022c\1\166\1\126\3\u022b"+
    "\1\126\4\u022b\10\126\1\132\5\126\2\u022b\10\126\2\u022b"+
    "\3\126\1\u022d\2\126\3\u022b\1\126\4\u022b\15\126\1\0"+
    "\2\u021b\10\0\2\u021b\3\0\1\u021c\1\70\1\0\3\u021b"+
    "\1\0\4\u021b\15\0\1\76\2\u022e\10\76\2\u022e\3\76"+
    "\1\u022f\1\137\1\113\3\u022e\1\76\4\u022e\10\76\1\100"+
    "\5\76\2\u022e\10\76\2\u022e\3\76\1\u022f\1\76\1\113"+
    "\3\u022e\1\76\4\u022e\15\76\1\0\2\u0230\10\0\2\u0230"+
    "\3\0\1\u0231\1\122\1\0\3\u0230\1\0\4\u0230\10\0"+
    "\1\65\5\0\2\u0230\10\0\2\u0230\3\0\1\u0231\2\0"+
    "\3\u0230\1\0\4\u0230\15\0\1\126\2\u0232\10\126\2\u0232"+
    "\3\126\1\u0233\1\166\1\126\3\u0232\1\126\4\u0232\10\126"+
    "\1\132\5\126\2\u0232\10\126\2\u0232\3\126\1\u0234\2\126"+
    "\3\u0232\1\126\4\u0232\15\126\1\0\2\u0222\10\0\2\u0222"+
    "\3\0\1\u0223\1\70\1\0\3\u0222\1\0\4\u0222\15\0"+
    "\1\76\2\u0235\10\76\2\u0235\3\76\1\u0236\1\137\1\113"+
    "\3\u0235\1\76\4\u0235\10\76\1\100\5\76\2\u0235\10\76"+
    "\2\u0235\3\76\1\u0236\1\76\1\113\3\u0235\1\76\4\u0235"+
    "\15\76\1\0\2\u0237\10\0\2\u0237\4\0\1\122\1\0"+
    "\3\u0237\1\0\4\u0237\10\0\1\65\5\0\2\u0237\10\0"+
    "\2\u0237\6\0\3\u0237\1\0\4\u0237\15\0\1\126\2\u0238"+
    "\10\126\2\u0238\3\126\1\u0239\1\166\1\126\3\u0238\1\126"+
    "\4\u0238\10\126\1\132\5\126\2\u0238\10\126\2\u0238\3\126"+
    "\1\u023a\2\126\3\u0238\1\126\4\u0238\15\126\1\0\2\u0229"+
    "\10\0\2\u0229\3\0\1\u022a\1\70\1\0\3\u0229\1\0"+
    "\4\u0229\15\0\1\76\2\u023b\10\76\2\u023b\4\76\1\137"+
    "\1\113\3\u023b\1\76\4\u023b\10\76\1\100\5\76\2\u023b"+
    "\10\76\2\u023b\5\76\1\113\3\u023b\1\76\4\u023b\15\76"+
    "\21\0\1\122\21\0\1\65\4\0\1\126\2\u023c\10\126"+
    "\2\u023c\3\126\1\u023d\1\166\1\126\3\u023c\1\126\4\u023c"+
    "\10\126\1\132\5\126\2\u023c\10\126\2\u023c\3\126\1\u023e"+
    "\2\126\3\u023c\1\126\4\u023c\15\126\1\0\2\u0230\10\0"+
    "\2\u0230\3\0\1\u0231\1\70\1\0\3\u0230\1\0\4\u0230"+
    "\15\0\21\76\1\137\1\113\20\76\1\100\4\76\1\126"+
    "\2\u023f\10\126\2\u023f\3\126\1\147\1\166\1\126\3\u023f"+
    "\1\126\4\u023f\10\126\1\132\5\126\2\u023f\10\126\2\u023f"+
    "\3\126\1\106\2\126\3\u023f\1\126\4\u023f\15\126\1\0"+
    "\2\u0237\10\0\2\u0237\4\0\1\70\1\0\3\u0237\1\0"+
    "\4\u0237\15\0\20\126\1\147\1\166\21\126\1\132\4\126";

  private static int [] zzUnpackTrans() {
    int [] result = new int[21880];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  private static final char[] EMPTY_BUFFER = new char[0];
  private static final int YYEOF = -1;
  private static java.io.Reader zzReader = null; // Fake

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\5\0\1\11\2\1\1\11\3\1\2\11\3\1\1\11"+
    "\3\1\3\11\1\1\1\11\3\1\2\0\1\11\4\1"+
    "\2\0\1\11\1\1\10\0\1\1\1\11\5\0\1\11"+
    "\31\0\1\11\2\0\1\11\3\0\1\1\5\0\1\1"+
    "\26\0\1\1\24\0\1\1\2\0\1\1\76\0\1\1"+
    "\u0172\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[575];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */
  private static class Token implements MarkdownTokenTypes {}

  private Stack<Integer> stateStack = new Stack<Integer>();

  private boolean isHeader = false;

  private ParseDelimited parseDelimited = new ParseDelimited();

  private static class ParseDelimited {
    char exitChar = 0;
    IElementType returnType = null;
    boolean inlinesAllowed = true;
  }

  private static class LinkDef {
    boolean wasUrl;
    boolean wasParen;
  }

  private static class HtmlHelper {
    private static final String BLOCK_TAGS_STRING =
            "article, header, aside, hgroup, blockquote, hr, iframe, body, li, map, button, " +
            "object, canvas, ol, caption, output, col, p, colgroup, pre, dd, progress, div, " +
            "section, dl, table, td, dt, tbody, embed, textarea, fieldset, tfoot, figcaption, " +
            "th, figure, thead, footer, footer, tr, form, ul, h1, h2, h3, h4, h5, h6, video, " +
            "script, style";

    static final Set<String> BLOCK_TAGS = getBlockTagsSet();

    private static Set<String> getBlockTagsSet() {
      Set<String> result = new HashSet<String>();
      String[] tags = BLOCK_TAGS_STRING.split(", ");
      for (String tag : tags) {
        result.add(tag);
      }
      return result;
    }
  }

  private static IElementType getDelimiterTokenType(char c) {
    switch (c) {
      case '"': return Token.DOUBLE_QUOTE;
      case '\'': return Token.SINGLE_QUOTE;
      case '(': return Token.LPAREN;
      case ')': return Token.RPAREN;
      case '[': return Token.LBRACKET;
      case ']': return Token.RBRACKET;
      case '<': return Token.LT;
      case '>': return Token.GT;
      default: return Token.BAD_CHARACTER;
    }
  }

  private IElementType parseDelimited(IElementType contentsType, boolean allowInlines) {
    char first = yycharat(0);
    char last = yycharat(yylength() - 1);

    stateStack.push(yystate());

    parseDelimited.exitChar = last;
    parseDelimited.returnType = contentsType;
//    parseDelimited.inlinesAllowed = allowInlines;
    parseDelimited.inlinesAllowed = true;

    yybegin(PARSE_DELIMITED);

    yypushback(yylength() - 1);
    return getDelimiterTokenType(first);
  }

  private void processEol() {
    int newlinePos = 1;
    while (newlinePos < yylength() && yycharat(newlinePos) != '\n') {
      newlinePos++;
    }

    // there is always one at 0 so that means there are two at least
    if (newlinePos != yylength()) {
      yypushback(yylength() - newlinePos);
      return;
    }

    yybegin(YYINITIAL);
    yypushback(yylength() - 1);

    isHeader = false;
  }

  private void popState() {
    if (stateStack.isEmpty()) {
      yybegin(AFTER_LINE_START);
    }
    else {
      yybegin(stateStack.pop());
    }
  }

  private void resetState() {
    yypushback(yylength());

    popState();
  }

  private String getTagName() {
    if (yylength() > 1 && yycharat(1) == '/') {
      return yytext().toString().substring(2, yylength() - 1).trim();
    }
    return yytext().toString().substring(1);
  }

  private boolean isBlockTag(String tagName) {
    return HtmlHelper.BLOCK_TAGS.contains(tagName.toLowerCase());
  }

  private boolean canInline() {
    return yystate() == AFTER_LINE_START || yystate() == PARSE_DELIMITED && parseDelimited.inlinesAllowed;
  }

  private IElementType getReturnGeneralized(IElementType defaultType) {
    if (canInline()) {
      return defaultType;
    }
    return parseDelimited.returnType;
  }

  private int countChars(CharSequence s, char c) {
    int result = 0;
    for (int i = 0; i < s.length(); ++i) {
      if (s.charAt(i) == c)
        result++;
    }
    return result;
  }



  public _MarkdownLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public _MarkdownLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 108) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = buffer;
    zzBufferArray = null;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBufferArray != null ? zzBufferArray[zzStartRead+pos]:zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL)
            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 20: 
          { return parseDelimited(Token.AUTOLINK, false);
          }
        case 21: break;
        case 3: 
          { return Token.HTML_BLOCK;
          }
        case 22: break;
        case 10: 
          { return Token.COLON;
          }
        case 23: break;
        case 19: 
          { return parseDelimited(Token.EMAIL_AUTOLINK, false);
          }
        case 24: break;
        case 2: 
          { return Token.BLOCK_QUOTE;
          }
        case 25: break;
        case 17: 
          { return Token.HTML_ENTITY;
          }
        case 26: break;
        case 12: 
          { if (canInline()) {
      return Token.BACKTICK;
    }
    return parseDelimited.returnType;
          }
        case 27: break;
        case 4: 
          { return Token.BAD_CHARACTER;
          }
        case 28: break;
        case 15: 
          { return getReturnGeneralized(Token.TEXT);
          }
        case 29: break;
        case 16: 
          { return getReturnGeneralized(Token.ESCAPED_BACKTICKS);
          }
        case 30: break;
        case 14: 
          { yybegin(YYINITIAL);
    yypushback(yylength());
          }
        case 31: break;
        case 13: 
          { if (yycharat(0) == parseDelimited.exitChar) {
      yybegin(stateStack.pop());
      return getDelimiterTokenType(yycharat(0));
    }
    return parseDelimited.returnType;
          }
        case 32: break;
        case 11: 
          { return getReturnGeneralized(Token.EMPH);
          }
        case 33: break;
        case 18: 
          { return Token.HTML_TAG;
          }
        case 34: break;
        case 5: 
          { return Token.TEXT;
          }
        case 35: break;
        case 6: 
          { return Token.WHITE_SPACE;
          }
        case 36: break;
        case 8: 
          { return getDelimiterTokenType(yycharat(0));
          }
        case 37: break;
        case 1: 
          { resetState();
          }
        case 38: break;
        case 9: 
          { return Token.EXCLAMATION_MARK;
          }
        case 39: break;
        case 7: 
          { int lastSpaces = yytext().toString().indexOf("\n");
    if (lastSpaces >= 2) {
      yypushback(yylength() - lastSpaces);
      return Token.HARD_LINE_BREAK;
    }
    else if (lastSpaces > 0) {
      yypushback(yylength() - lastSpaces);
      return Token.WHITE_SPACE;
    }

    processEol();
    return Token.EOL;
          }
        case 40: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
